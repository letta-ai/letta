import fs from 'fs';
import path from 'path';

import { merge, isErrorResult } from 'openapi-merge';
import { Swagger } from 'atlassian-openapi';

const lettaWebOpenAPIPath = path.join(
  __dirname,
  '..',
  '..',
  'letta',
  'autogenerated',
  'letta-web-openapi.json'
);
const lettaAgentsAPIPath = path.join(
  __dirname,
  '..',
  '..',
  '..',
  'libs',
  'letta-agents-api',
  'letta-agents-openapi.json'
);

const lettaWebOpenAPI = JSON.parse(
  fs.readFileSync(lettaWebOpenAPIPath, 'utf8')
) as Swagger.SwaggerV3;
const lettaAgentsAPI = JSON.parse(
  fs.readFileSync(lettaAgentsAPIPath, 'utf8')
) as Swagger.SwaggerV3;

const result = merge([
  {
    oas: lettaWebOpenAPI,
  },
  {
    oas: lettaAgentsAPI,
  },
]);

if (isErrorResult(result)) {
  console.error(`${result.message} (${result.type})`);
  process.exit(1);
}

result.output.openapi = '3.1.0';
result.output.info = {
  title: 'Letta API',
  version: '1.0.0',
};

result.output.servers = [
  {
    url: 'https://letta.com',
    description: 'Letta Hosted',
  },
  {
    url: 'http://memgpt.localhost',
    description: 'Self Hosted',
  },
];

result.output.components = {
  ...result.output.components,
  securitySchemes: {
    bearerAuth: {
      type: 'http',
      scheme: 'bearer',
    },
  },
};

result.output.security = [
  ...(result.output.security || []),
  {
    bearerAuth: [],
  },
];

fs.writeFileSync(
  path.join(__dirname, '..', 'autogenerated', 'openapi.json'),
  JSON.stringify(result.output, null, 2)
);
