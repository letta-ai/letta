import { generateOpenApi } from '@ts-rest/open-api';
import { sdkContracts } from '$web/sdk/contracts';
import fs from 'fs';
import path from 'path';
import { isErrorResult, merge } from 'openapi-merge';
import { execSync } from 'child_process';

const openApiDoc = generateOpenApi(
  sdkContracts,
  {
    info: {
      title: 'Letta API',
      version: '1.0.0',
    },
  },
  {
    setOperationId: 'concatenated-path',
  },
);

const result = merge([
  {
    oas: openApiDoc as any,
  },
]);

if (isErrorResult(result)) {
  console.error(`${result.message} (${result.type})`);
  process.exit(1);
}

fs.writeFileSync(
  path.join(__dirname, '..', 'autogenerated', 'letta-web-openapi.json'),
  JSON.stringify(result.output, null, 2),
);

function formatWebOpenAPIJson() {
  const openApiPath = path.join(
    __dirname,
    '..',
    'autogenerated',
    'letta-web-openapi.json',
  );

  try {
    // Use Prettier to format the JSON file
    execSync(`npx prettier --write "${openApiPath}"`, { stdio: 'inherit' });
    console.log('Successfully formatted letta-web-openapi.json with Prettier');
  } catch (error) {
    console.error('Error formatting letta-web-openapi.json:', error);
    process.exit(1);
  }
}

formatWebOpenAPIJson();
