{
  "openapi": "3.0.3",
  "info": {
    "title": "Letta API",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/agents": {
      "post": {
        "description": "Create a new agent with the specified configuration.",
        "summary": "Create Agent",
        "tags": ["agents"],
        "parameters": [],
        "operationId": "agents.createAgent",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "description": "A description of the agent"
                  },
                  "metadata_": {
                    "type": "object",
                    "additionalProperties": {},
                    "nullable": true
                  },
                  "user_id": {
                    "type": "string",
                    "nullable": true
                  },
                  "name": {
                    "type": "string",
                    "nullable": true
                  },
                  "message_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true,
                    "description": "A list of message IDs associated with the agent"
                  },
                  "memory": {
                    "type": "object",
                    "properties": {
                      "memory": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string"
                            },
                            "limit": {
                              "type": "number"
                            },
                            "template_name": {
                              "type": "string",
                              "nullable": true
                            },
                            "template": {
                              "type": "boolean"
                            },
                            "label": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string",
                              "nullable": true
                            },
                            "metadata_": {
                              "type": "object",
                              "additionalProperties": {}
                            },
                            "user_id": {
                              "type": "string",
                              "nullable": true
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": ["value"]
                        }
                      },
                      "prompt_template": {
                        "type": "string"
                      }
                    },
                    "nullable": true
                  },
                  "tools": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true
                  },
                  "system": {
                    "type": "string",
                    "nullable": true
                  },
                  "llm_config": {
                    "type": "object",
                    "properties": {
                      "model": {
                        "type": "string"
                      },
                      "model_endpoint_type": {
                        "type": "string",
                        "enum": [
                          "openai",
                          "anthropic",
                          "cohere",
                          "google_ai",
                          "azure",
                          "groq",
                          "ollama",
                          "webui",
                          "webui-legacy",
                          "lmstudio",
                          "lmstudio-legacy",
                          "llamacpp",
                          "koboldcpp",
                          "vllm",
                          "hugging-face"
                        ]
                      },
                      "model_endpoint": {
                        "type": "string",
                        "nullable": true
                      },
                      "model_wrapper": {
                        "type": "string",
                        "nullable": true
                      },
                      "context_window": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "model",
                      "model_endpoint_type",
                      "context_window"
                    ],
                    "nullable": true
                  },
                  "embedding_config": {
                    "type": "object",
                    "properties": {
                      "embedding_endpoint_type": {
                        "type": "string"
                      },
                      "embedding_endpoint": {
                        "type": "string",
                        "nullable": true
                      },
                      "embedding_model": {
                        "type": "string"
                      },
                      "embedding_dim": {
                        "type": "number"
                      },
                      "embedding_chunk_size": {
                        "type": "number",
                        "nullable": true
                      },
                      "azure_endpoint": {
                        "type": "string",
                        "nullable": true
                      },
                      "azure_version": {
                        "type": "string",
                        "nullable": true
                      },
                      "azure_deployment": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "required": [
                      "embedding_endpoint_type",
                      "embedding_model",
                      "embedding_dim"
                    ],
                    "nullable": true
                  },
                  "template": {
                    "type": "boolean"
                  },
                  "project_id": {
                    "type": "string"
                  },
                  "from_template": {
                    "type": "string"
                  },
                  "variables": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201"
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "oneOf": [
                        {
                          "oneOf": [
                            {
                              "type": "string",
                              "enum": ["Template not found"]
                            },
                            {
                              "type": "string"
                            }
                          ]
                        },
                        {
                          "type": "string",
                          "enum": ["Project not found"]
                        }
                      ]
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "409": {
            "description": "409",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "An agent with the same name already exists",
                        "project_id is required when providing a name"
                      ]
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "422": {
            "description": "422"
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": ["Failed to create agent"]
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "List all agents associated with a given user. This endpoint retrieves a list of all agents and their configurations associated with the specified user ID",
        "summary": "List Agents",
        "tags": ["agents"],
        "parameters": [
          {
            "name": "template",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "include_version",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "by_version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "operationId": "agents.listAgents",
        "responses": {
          "200": {
            "description": "200"
          }
        }
      }
    },
    "/v1/agents/{agent_id}/version-template": {
      "post": {
        "description": "Creates a versioned version of an agent",
        "summary": "Version Agent Template",
        "tags": ["agents"],
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The agent ID of the agent to migrate, if this agent is not a template, it will create a agent template from the agent provided as well"
          },
          {
            "name": "returnAgentId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "operationId": "agents.versionAgentTemplate",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "migrate_deployed_agents": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "agentId": {
                      "type": "string"
                    }
                  },
                  "required": ["version"]
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": ["Agent not found"]
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": ["Failed to version agent template"]
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agent_id}/migrate": {
      "post": {
        "description": "Migrate an agent to a new versioned agent template",
        "summary": "Migrate Agent",
        "tags": ["agents"],
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agents.migrateAgent",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "to_template": {
                    "type": "string"
                  },
                  "variables": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "If you chose to not preserve core memories, you should provide the new variables for the core memories"
                  },
                  "preserve_core_memories": {
                    "type": "boolean"
                  }
                },
                "required": ["to_template", "preserve_core_memories"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    }
                  },
                  "required": ["success"]
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Agent provided is a template or not found, you can only migrate deployed agents",
                        "Template version provided does not exist"
                      ]
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "409": {
            "description": "409",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "You can only migrate agents to a new versioned agent template that belongs to the same project"
                      ]
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": ["Migration failed"]
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agent_id}": {
      "get": {
        "description": "Get an agent by its ID",
        "summary": "Get Agent By Id",
        "tags": ["agents"],
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "all",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "operationId": "agents.getAgentById",
        "responses": {
          "200": {
            "description": "200"
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": ["Agent not found"]
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete an agent by its ID",
        "summary": "Delete Agent",
        "tags": ["agents"],
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agents.deleteAgent",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    }
                  },
                  "required": ["success"]
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": ["Agent not found"]
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": ["Failed to delete agent"]
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Update an agent by its ID",
        "summary": "Update Agent",
        "tags": ["agents"],
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agents.updateAgent",
        "responses": {
          "200": {
            "description": "200"
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Name must be alphanumeric, with underscores or dashes"
                      ]
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": ["Agent not found"]
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "409": {
            "description": "409",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": ["An agent with the same name already exists"]
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": ["Failed to update agent"]
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/v1/health": {
      "get": {
        "tags": ["health"],
        "parameters": [],
        "operationId": "health.getHealth",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": ["status"]
                }
              }
            }
          }
        }
      }
    }
  }
}
