{
  "openapi": "3.1.0",
  "info": {
    "title": "Letta API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://app.letta.com",
      "description": "Letta Cloud"
    },
    {
      "url": "http://localhost:8283",
      "description": "Self-hosted"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/v1/tools/{tool_id}": {
      "delete": {
        "tags": ["tools"],
        "summary": "Delete Tool",
        "description": "Delete a tool by name",
        "operationId": "delete_tool",
        "parameters": [
          {
            "name": "tool_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tool Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["tools"],
        "summary": "Retrieve Tool",
        "description": "Get a tool by ID",
        "operationId": "retrieve_tool",
        "parameters": [
          {
            "name": "tool_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tool Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tool"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["tools"],
        "summary": "Modify Tool",
        "description": "Update an existing tool",
        "operationId": "modify_tool",
        "parameters": [
          {
            "name": "tool_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tool Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToolUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tool"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/tools/": {
      "get": {
        "tags": ["tools"],
        "summary": "List Tools",
        "description": "Get a list of all tools available to agents belonging to the org of the user",
        "operationId": "list_tools",
        "parameters": [
          {
            "name": "after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "After"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tool"
                  },
                  "title": "Response List Tools"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["tools"],
        "summary": "Create Tool",
        "description": "Create a new tool",
        "operationId": "create_tool",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToolCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tool"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["tools"],
        "summary": "Upsert Tool",
        "description": "Create or update a tool",
        "operationId": "upsert_tool",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToolCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tool"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/tools/add-base-tools": {
      "post": {
        "tags": ["tools"],
        "summary": "Upsert Base Tools",
        "description": "Upsert base tools",
        "operationId": "add_base_tools",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tool"
                  },
                  "title": "Response Add Base Tools"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/tools/run": {
      "post": {
        "tags": ["tools"],
        "summary": "Run Tool From Source",
        "description": "Attempt to build a tool from source, then run it on the provided arguments",
        "operationId": "run_tool_from_source",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToolRunFromSource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToolReturnMessage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/tools/composio/apps": {
      "get": {
        "tags": ["tools"],
        "summary": "List Composio Apps",
        "description": "Get a list of all Composio apps",
        "operationId": "list_composio_apps",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppModel"
                  },
                  "title": "Response List Composio Apps"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/tools/composio/apps/{composio_app_name}/actions": {
      "get": {
        "tags": ["tools"],
        "summary": "List Composio Actions By App",
        "description": "Get a list of all Composio actions for a specific app",
        "operationId": "list_composio_actions_by_app",
        "parameters": [
          {
            "name": "composio_app_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Composio App Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActionModel"
                  },
                  "title": "Response List Composio Actions By App"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/tools/composio/{composio_action_name}": {
      "post": {
        "tags": ["tools"],
        "summary": "Add Composio Tool",
        "description": "Add a new Composio tool by action name (Composio refers to each tool as an `Action`)",
        "operationId": "add_composio_tool",
        "parameters": [
          {
            "name": "composio_action_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Composio Action Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tool"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sources/{source_id}": {
      "get": {
        "tags": ["sources"],
        "summary": "Retrieve Source",
        "description": "Get all sources",
        "operationId": "retrieve_source",
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Source"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["sources"],
        "summary": "Modify Source",
        "description": "Update the name or documentation of an existing data source.",
        "operationId": "modify_source",
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Source"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["sources"],
        "summary": "Delete Source",
        "description": "Delete a data source.",
        "operationId": "delete_source",
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sources/name/{source_name}": {
      "get": {
        "tags": ["sources"],
        "summary": "Get Source Id By Name",
        "description": "Get a source by name",
        "operationId": "get_source_id_by_name",
        "parameters": [
          {
            "name": "source_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Get Source Id By Name"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sources/": {
      "get": {
        "tags": ["sources"],
        "summary": "List Sources",
        "description": "List all data sources created by a user.",
        "operationId": "list_sources",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Source"
                  },
                  "title": "Response List Sources"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["sources"],
        "summary": "Create Source",
        "description": "Create a new data source.",
        "operationId": "create_source",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Source"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sources/{source_id}/upload": {
      "post": {
        "tags": ["sources"],
        "summary": "Upload File To Source",
        "description": "Upload a file to a data source.",
        "operationId": "upload_file_to_source",
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_file_to_source"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sources/{source_id}/passages": {
      "get": {
        "tags": ["sources"],
        "summary": "List Source Passages",
        "description": "List all passages associated with a data source.",
        "operationId": "list_source_passages",
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Passage"
                  },
                  "title": "Response List Source Passages"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sources/{source_id}/files": {
      "get": {
        "tags": ["sources"],
        "summary": "List Source Files",
        "description": "List paginated files associated with a data source.",
        "operationId": "list_source_files",
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of files to return",
              "default": 1000,
              "title": "Limit"
            },
            "description": "Number of files to return"
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Pagination cursor to fetch the next set of results",
              "title": "After"
            },
            "description": "Pagination cursor to fetch the next set of results"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileMetadata"
                  },
                  "title": "Response List Source Files"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sources/{source_id}/{file_id}": {
      "delete": {
        "tags": ["sources"],
        "summary": "Delete File From Source",
        "description": "Delete a data source.",
        "operationId": "delete_file_from_source",
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Id"
            }
          },
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/": {
      "get": {
        "tags": ["agents"],
        "summary": "List Agents",
        "description": "List all agents associated with a given user.\nThis endpoint retrieves a list of all agents and their configurations associated with the specified user ID.",
        "operationId": "list_agents",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Name of the agent",
              "title": "Name"
            },
            "description": "Name of the agent"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "List of tags to filter agents by",
              "title": "Tags"
            },
            "description": "List of tags to filter agents by"
          },
          {
            "name": "match_all_tags",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If True, only returns agents that match ALL given tags. Otherwise, return agents that have ANY of the passed in tags.",
              "default": false,
              "title": "Match All Tags"
            },
            "description": "If True, only returns agents that match ALL given tags. Otherwise, return agents that have ANY of the passed in tags."
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Cursor for pagination",
              "title": "Before"
            },
            "description": "Cursor for pagination"
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Cursor for pagination",
              "title": "After"
            },
            "description": "Cursor for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit for pagination",
              "title": "Limit"
            },
            "description": "Limit for pagination"
          },
          {
            "name": "query_text",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search agents by name",
              "title": "Query Text"
            },
            "description": "Search agents by name"
          },
          {
            "name": "project_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search agents by project id",
              "title": "Project Id"
            },
            "description": "Search agents by project id"
          },
          {
            "name": "template_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search agents by template id",
              "title": "Template Id"
            },
            "description": "Search agents by template id"
          },
          {
            "name": "base_template_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search agents by base template id",
              "title": "Base Template Id"
            },
            "description": "Search agents by base template id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgentState"
                  },
                  "title": "Response List Agents"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["agents"],
        "summary": "Create Agent",
        "description": "Create a new agent with the specified configuration.",
        "operationId": "create_agent",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAgentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentState"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agent_id}/context": {
      "get": {
        "tags": ["agents"],
        "summary": "Retrieve Agent Context Window",
        "description": "Retrieve the context window of a specific agent.",
        "operationId": "retrieve_agent_context_window",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextWindowOverview"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agent_id}": {
      "patch": {
        "tags": ["agents"],
        "summary": "Modify Agent",
        "description": "Update an existing agent",
        "operationId": "modify_agent",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAgent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentState"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["agents"],
        "summary": "Retrieve Agent",
        "description": "Get the state of the agent.",
        "operationId": "retrieve_agent",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentState"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["agents"],
        "summary": "Delete Agent",
        "description": "Delete an agent.",
        "operationId": "delete_agent",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agent_id}/tools": {
      "get": {
        "tags": ["agents"],
        "summary": "List Agent Tools",
        "description": "Get tools from an existing agent",
        "operationId": "list_agent_tools",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tool"
                  },
                  "title": "Response List Agent Tools"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agent_id}/tools/attach/{tool_id}": {
      "patch": {
        "tags": ["agents"],
        "summary": "Attach Tool",
        "description": "Attach a tool to an agent.",
        "operationId": "attach_tool",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          },
          {
            "name": "tool_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tool Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentState"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agent_id}/tools/detach/{tool_id}": {
      "patch": {
        "tags": ["agents"],
        "summary": "Detach Tool",
        "description": "Detach a tool from an agent.",
        "operationId": "detach_tool",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          },
          {
            "name": "tool_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tool Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentState"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agent_id}/sources/attach/{source_id}": {
      "patch": {
        "tags": ["agents"],
        "summary": "Attach Source",
        "description": "Attach a source to an agent.",
        "operationId": "attach_source_to_agent",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          },
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentState"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agent_id}/sources/detach/{source_id}": {
      "patch": {
        "tags": ["agents"],
        "summary": "Detach Source",
        "description": "Detach a source from an agent.",
        "operationId": "detach_source_from_agent",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          },
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentState"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agent_id}/sources": {
      "get": {
        "tags": ["agents"],
        "summary": "List Agent Sources",
        "description": "Get the sources associated with an agent.",
        "operationId": "list_agent_sources",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Source"
                  },
                  "title": "Response List Agent Sources"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agent_id}/core-memory": {
      "get": {
        "tags": ["agents"],
        "summary": "Retrieve Agent Memory",
        "description": "Retrieve the memory state of a specific agent.\nThis endpoint fetches the current memory state of the agent identified by the user ID and agent ID.",
        "operationId": "retrieve_agent_memory",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Memory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agent_id}/core-memory/blocks/{block_label}": {
      "get": {
        "tags": ["agents"],
        "summary": "Retrieve Core Memory Block",
        "description": "Retrieve a memory block from an agent.",
        "operationId": "retrieve_core_memory_block",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          },
          {
            "name": "block_label",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Block Label"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["agents"],
        "summary": "Modify Core Memory Block",
        "description": "Updates a memory block of an agent.",
        "operationId": "modify_core_memory_block",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          },
          {
            "name": "block_label",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Block Label"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agent_id}/core-memory/blocks": {
      "get": {
        "tags": ["agents"],
        "summary": "List Core Memory Blocks",
        "description": "Retrieve the memory blocks of a specific agent.",
        "operationId": "list_core_memory_blocks",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Block"
                  },
                  "title": "Response List Core Memory Blocks"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agent_id}/core-memory/blocks/attach/{block_id}": {
      "patch": {
        "tags": ["agents"],
        "summary": "Attach Core Memory Block",
        "description": "Attach a block to an agent.",
        "operationId": "attach_core_memory_block",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Block Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentState"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agent_id}/core-memory/blocks/detach/{block_id}": {
      "patch": {
        "tags": ["agents"],
        "summary": "Detach Core Memory Block",
        "description": "Detach a block from an agent.",
        "operationId": "detach_core_memory_block",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Block Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentState"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agent_id}/archival-memory": {
      "get": {
        "tags": ["agents"],
        "summary": "List Archival Memory",
        "description": "Retrieve the memories in an agent's archival memory store (paginated query).",
        "operationId": "list_archival_memory",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Unique ID of the memory to start the query range at.",
              "title": "After"
            },
            "description": "Unique ID of the memory to start the query range at."
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Unique ID of the memory to end the query range at.",
              "title": "Before"
            },
            "description": "Unique ID of the memory to end the query range at."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "How many results to include in the response.",
              "title": "Limit"
            },
            "description": "How many results to include in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Passage"
                  },
                  "title": "Response List Archival Memory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["agents"],
        "summary": "Create Archival Memory",
        "description": "Insert a memory into an agent's archival memory store.",
        "operationId": "create_archival_memory",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateArchivalMemory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Passage"
                  },
                  "title": "Response Create Archival Memory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agent_id}/archival-memory/{memory_id}": {
      "delete": {
        "tags": ["agents"],
        "summary": "Delete Archival Memory",
        "description": "Delete a memory from an agent's archival memory store.",
        "operationId": "delete_archival_memory",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          },
          {
            "name": "memory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Memory Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agent_id}/messages": {
      "get": {
        "tags": ["agents"],
        "summary": "List Messages",
        "description": "Retrieve message history for an agent.",
        "operationId": "list_messages",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Message after which to retrieve the returned messages.",
              "title": "After"
            },
            "description": "Message after which to retrieve the returned messages."
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Message before which to retrieve the returned messages.",
              "title": "Before"
            },
            "description": "Message before which to retrieve the returned messages."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Maximum number of messages to retrieve.",
              "default": 10,
              "title": "Limit"
            },
            "description": "Maximum number of messages to retrieve."
          },
          {
            "name": "use_assistant_message",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to use assistant messages",
              "default": true,
              "title": "Use Assistant Message"
            },
            "description": "Whether to use assistant messages"
          },
          {
            "name": "assistant_message_tool_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The name of the designated message tool.",
              "default": "send_message",
              "title": "Assistant Message Tool Name"
            },
            "description": "The name of the designated message tool."
          },
          {
            "name": "assistant_message_tool_kwarg",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The name of the message argument.",
              "default": "message",
              "title": "Assistant Message Tool Kwarg"
            },
            "description": "The name of the message argument."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LettaMessageUnion"
                  },
                  "title": "Response List Messages"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["agents"],
        "summary": "Send Message",
        "description": "Process a user message and return the agent's response.\nThis endpoint accepts a message from a user and processes it through the agent.",
        "operationId": "send_message",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LettaRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LettaResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agent_id}/messages/{message_id}": {
      "patch": {
        "tags": ["agents"],
        "summary": "Modify Message",
        "description": "Update the details of a message associated with an agent.",
        "operationId": "modify_message",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          },
          {
            "name": "message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Message Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agent_id}/messages/stream": {
      "post": {
        "tags": ["agents"],
        "summary": "Send Message Streaming",
        "description": "Process a user message and return the agent's response.\nThis endpoint accepts a message from a user and processes it through the agent.\nIt will stream the steps of the response always, and stream the tokens if 'stream_tokens' is set to True.",
        "operationId": "create_agent_message_stream",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LettaStreamingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              },
              "text/event-stream": {
                "description": "Server-Sent Events stream"
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agent_id}/messages/async": {
      "post": {
        "tags": ["agents"],
        "summary": "Send Message Async",
        "description": "Asynchronously process a user message and return a run object.\nThe actual processing happens in the background, and the status can be checked using the run ID.",
        "operationId": "create_agent_message_async",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LettaRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Run"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agent_id}/reset-messages": {
      "patch": {
        "tags": ["agents"],
        "summary": "Reset Messages",
        "description": "Resets the messages for an agent",
        "operationId": "reset_messages",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          },
          {
            "name": "add_default_initial_messages",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If true, adds the default initial messages after resetting.",
              "default": false,
              "title": "Add Default Initial Messages"
            },
            "description": "If true, adds the default initial messages after resetting."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentState"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/models/": {
      "get": {
        "tags": ["models", "llms"],
        "summary": "List Llm Backends",
        "operationId": "list_models",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/LLMConfig"
                  },
                  "type": "array",
                  "title": "Response List Models"
                }
              }
            }
          }
        }
      }
    },
    "/v1/models/embedding": {
      "get": {
        "tags": ["models", "llms"],
        "summary": "List Embedding Backends",
        "operationId": "list_embedding_models",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EmbeddingConfig"
                  },
                  "type": "array",
                  "title": "Response List Embedding Models"
                }
              }
            }
          }
        }
      }
    },
    "/v1/blocks/": {
      "get": {
        "tags": ["blocks"],
        "summary": "List Blocks",
        "operationId": "list_blocks",
        "parameters": [
          {
            "name": "label",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Labels to include (e.g. human, persona)",
              "title": "Label"
            },
            "description": "Labels to include (e.g. human, persona)"
          },
          {
            "name": "templates_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include only templates",
              "default": true,
              "title": "Templates Only"
            },
            "description": "Whether to include only templates"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Name of the block",
              "title": "Name"
            },
            "description": "Name of the block"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Block"
                  },
                  "title": "Response List Blocks"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["blocks"],
        "summary": "Create Block",
        "operationId": "create_block",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBlock"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/blocks/{block_id}": {
      "patch": {
        "tags": ["blocks"],
        "summary": "Modify Block",
        "operationId": "modify_block",
        "parameters": [
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Block Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["blocks"],
        "summary": "Delete Block",
        "operationId": "delete_block",
        "parameters": [
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Block Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["blocks"],
        "summary": "Retrieve Block",
        "operationId": "retrieve_block",
        "parameters": [
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Block Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/blocks/{block_id}/agents": {
      "get": {
        "tags": ["blocks"],
        "summary": "List Agents For Block",
        "description": "Retrieves all agents associated with the specified block.\nRaises a 404 if the block does not exist.",
        "operationId": "list_agents_for_block",
        "parameters": [
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Block Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgentState"
                  },
                  "title": "Response List Agents For Block"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/jobs/": {
      "get": {
        "tags": ["jobs"],
        "summary": "List Jobs",
        "description": "List all jobs.",
        "operationId": "list_jobs",
        "parameters": [
          {
            "name": "source_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Only list jobs associated with the source.",
              "title": "Source Id"
            },
            "description": "Only list jobs associated with the source."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Job"
                  },
                  "title": "Response List Jobs"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/jobs/active": {
      "get": {
        "tags": ["jobs"],
        "summary": "List Active Jobs",
        "description": "List all active jobs.",
        "operationId": "list_active_jobs",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Job"
                  },
                  "title": "Response List Active Jobs"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/jobs/{job_id}": {
      "get": {
        "tags": ["jobs"],
        "summary": "Retrieve Job",
        "description": "Get the status of a job.",
        "operationId": "retrieve_job",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["jobs"],
        "summary": "Delete Job",
        "description": "Delete a job by its job_id.",
        "operationId": "delete_job",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/health/": {
      "get": {
        "tags": ["health"],
        "summary": "Health Check",
        "operationId": "health_check",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Health"
                }
              }
            }
          }
        }
      }
    },
    "/v1/providers/": {
      "get": {
        "tags": ["providers", "providers"],
        "summary": "List Providers",
        "description": "Get a list of all custom providers in the database",
        "operationId": "list_providers",
        "parameters": [
          {
            "name": "after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "After"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Provider"
                  },
                  "title": "Response List Providers"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["providers", "providers"],
        "summary": "Create Provider",
        "description": "Create a new custom provider",
        "operationId": "create_provider",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProviderCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provider"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["providers", "providers"],
        "summary": "Modify Provider",
        "description": "Update an existing custom provider",
        "operationId": "modify_provider",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProviderUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provider"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["providers", "providers"],
        "summary": "Delete Provider",
        "description": "Delete an existing custom provider",
        "operationId": "delete_provider",
        "parameters": [
          {
            "name": "provider_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The provider_id key to be deleted.",
              "title": "Provider Id"
            },
            "description": "The provider_id key to be deleted."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/runs/": {
      "get": {
        "tags": ["runs"],
        "summary": "List Runs",
        "description": "List all runs.",
        "operationId": "list_runs",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Run"
                  },
                  "title": "Response List Runs"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/runs/active": {
      "get": {
        "tags": ["runs"],
        "summary": "List Active Runs",
        "description": "List all active runs.",
        "operationId": "list_active_runs",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Run"
                  },
                  "title": "Response List Active Runs"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/runs/{run_id}": {
      "get": {
        "tags": ["runs"],
        "summary": "Retrieve Run",
        "description": "Get the status of a run.",
        "operationId": "retrieve_run",
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Run"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["runs"],
        "summary": "Delete Run",
        "description": "Delete a run by its run_id.",
        "operationId": "delete_run",
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Run"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/runs/{run_id}/messages": {
      "get": {
        "tags": ["runs"],
        "summary": "List Run Messages",
        "description": "Get messages associated with a run with filtering options.\n\nArgs:\n    run_id: ID of the run\n    before: A cursor for use in pagination. `before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list.\n    after: A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list.\n    limit: Maximum number of messages to return\n    order: Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order.\n    role: Filter by role (user/assistant/system/tool)\n    return_message_object: Whether to return Message objects or LettaMessage objects\n    user_id: ID of the user making the request\n\nReturns:\n    A list of messages associated with the run. Default is List[LettaMessage].",
        "operationId": "list_run_messages",
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Run Id"
            }
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Cursor for pagination",
              "title": "Before"
            },
            "description": "Cursor for pagination"
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Cursor for pagination",
              "title": "After"
            },
            "description": "Cursor for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Maximum number of messages to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of messages to return"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order.",
              "default": "desc",
              "title": "Order"
            },
            "description": "Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order."
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/MessageRole"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by role",
              "title": "Role"
            },
            "description": "Filter by role"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LettaMessageUnion"
                  },
                  "title": "Response List Run Messages"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/runs/{run_id}/usage": {
      "get": {
        "tags": ["runs"],
        "summary": "Retrieve Run Usage",
        "description": "Get usage statistics for a run.",
        "operationId": "retrieve_run_usage",
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageStatistics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/steps": {
      "get": {
        "tags": ["steps"],
        "summary": "List Steps",
        "description": "List steps with optional pagination and date filters.\nDates should be provided in ISO 8601 format (e.g. 2025-01-29T15:01:19-08:00)",
        "operationId": "list_steps",
        "parameters": [
          {
            "name": "before",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Return steps before this step ID",
              "title": "Before"
            },
            "description": "Return steps before this step ID"
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Return steps after this step ID",
              "title": "After"
            },
            "description": "Return steps after this step ID"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Maximum number of steps to return",
              "default": 50,
              "title": "Limit"
            },
            "description": "Maximum number of steps to return"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Sort order (asc or desc)",
              "default": "desc",
              "title": "Order"
            },
            "description": "Sort order (asc or desc)"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Return steps after this ISO datetime (e.g. \"2025-01-29T15:01:19-08:00\")",
              "title": "Start Date"
            },
            "description": "Return steps after this ISO datetime (e.g. \"2025-01-29T15:01:19-08:00\")"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Return steps before this ISO datetime (e.g. \"2025-01-29T15:01:19-08:00\")",
              "title": "End Date"
            },
            "description": "Return steps before this ISO datetime (e.g. \"2025-01-29T15:01:19-08:00\")"
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by the name of the model used for the step",
              "title": "Model"
            },
            "description": "Filter by the name of the model used for the step"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Step"
                  },
                  "title": "Response List Steps"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/steps/{step_id}": {
      "get": {
        "tags": ["steps"],
        "summary": "Retrieve Step",
        "description": "Get a step by ID.",
        "operationId": "retrieve_step",
        "parameters": [
          {
            "name": "step_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Step Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Step"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/tags/": {
      "get": {
        "tags": ["tag", "admin", "admin"],
        "summary": "List Tags",
        "description": "Get a list of all tags in the database",
        "operationId": "list_tags",
        "parameters": [
          {
            "name": "after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "After"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "query_text",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Query Text"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Response List Tags"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/search": {
      "post": {
        "description": "Search deployed agents",
        "summary": "Search Deployed Agents",
        "tags": ["agents"],
        "parameters": [],
        "operationId": "agents.searchDeployedAgents",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "search": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "enum": ["version"]
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": ["field", "value"]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "enum": ["name"]
                            },
                            "operator": {
                              "type": "string",
                              "enum": ["eq", "contains"]
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": ["field", "operator", "value"]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "enum": ["tags"]
                            },
                            "operator": {
                              "type": "string",
                              "enum": ["contains"]
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": ["field", "operator", "value"]
                        }
                      ]
                    }
                  },
                  "project_id": {
                    "type": "string"
                  },
                  "combinator": {
                    "type": "string",
                    "enum": ["AND"]
                  },
                  "limit": {
                    "type": "number"
                  },
                  "after": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "agents": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "created_by_id": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string",
                                "format": "null",
                                "nullable": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    }
                                  ],
                                  "nullable": true
                                }
                              },
                              {}
                            ],
                            "nullable": true
                          },
                          "last_updated_by_id": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string",
                                "format": "null",
                                "nullable": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    }
                                  ],
                                  "nullable": true
                                }
                              },
                              {}
                            ],
                            "nullable": true
                          },
                          "created_at": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string",
                                "format": "null",
                                "nullable": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    }
                                  ],
                                  "nullable": true
                                }
                              },
                              {}
                            ],
                            "nullable": true
                          },
                          "updated_at": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string",
                                "format": "null",
                                "nullable": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    }
                                  ],
                                  "nullable": true
                                }
                              },
                              {}
                            ],
                            "nullable": true
                          },
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "tool_rules": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "tool_name": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "oneOf": [
                                            {
                                              "type": "string",
                                              "enum": ["constrain_child_tools"]
                                            },
                                            {}
                                          ]
                                        },
                                        "children": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": ["tool_name", "children"]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "tool_name": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "oneOf": [
                                            {
                                              "type": "string",
                                              "enum": ["run_first"]
                                            },
                                            {}
                                          ]
                                        }
                                      },
                                      "required": ["tool_name"]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "tool_name": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "oneOf": [
                                            {
                                              "type": "string",
                                              "enum": ["exit_loop"]
                                            },
                                            {}
                                          ]
                                        }
                                      },
                                      "required": ["tool_name"]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "tool_name": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "oneOf": [
                                            {
                                              "type": "string",
                                              "enum": ["conditional"]
                                            },
                                            {}
                                          ]
                                        },
                                        "default_child": {
                                          "oneOf": [
                                            {
                                              "type": "string"
                                            },
                                            {
                                              "type": "string",
                                              "format": "null",
                                              "nullable": true
                                            },
                                            {
                                              "type": "array",
                                              "items": {
                                                "oneOf": [
                                                  {
                                                    "type": "string"
                                                  },
                                                  {
                                                    "type": "string",
                                                    "format": "null",
                                                    "nullable": true
                                                  }
                                                ],
                                                "nullable": true
                                              }
                                            },
                                            {}
                                          ],
                                          "nullable": true
                                        },
                                        "child_output_mapping": {
                                          "nullable": true
                                        },
                                        "require_output_mapping": {
                                          "oneOf": [
                                            {
                                              "type": "boolean"
                                            },
                                            {}
                                          ]
                                        }
                                      },
                                      "required": ["tool_name"]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "string",
                                "format": "null",
                                "nullable": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "tool_name": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "oneOf": [
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "constrain_child_tools"
                                                    ]
                                                  },
                                                  {}
                                                ]
                                              },
                                              "children": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "required": [
                                              "tool_name",
                                              "children"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "tool_name": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "oneOf": [
                                                  {
                                                    "type": "string",
                                                    "enum": ["run_first"]
                                                  },
                                                  {}
                                                ]
                                              }
                                            },
                                            "required": ["tool_name"]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "tool_name": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "oneOf": [
                                                  {
                                                    "type": "string",
                                                    "enum": ["exit_loop"]
                                                  },
                                                  {}
                                                ]
                                              }
                                            },
                                            "required": ["tool_name"]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "tool_name": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "oneOf": [
                                                  {
                                                    "type": "string",
                                                    "enum": ["conditional"]
                                                  },
                                                  {}
                                                ]
                                              },
                                              "default_child": {
                                                "oneOf": [
                                                  {
                                                    "type": "string"
                                                  },
                                                  {
                                                    "type": "string",
                                                    "format": "null",
                                                    "nullable": true
                                                  },
                                                  {
                                                    "type": "array",
                                                    "items": {
                                                      "oneOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "string",
                                                          "format": "null",
                                                          "nullable": true
                                                        }
                                                      ],
                                                      "nullable": true
                                                    }
                                                  },
                                                  {}
                                                ],
                                                "nullable": true
                                              },
                                              "child_output_mapping": {
                                                "nullable": true
                                              },
                                              "require_output_mapping": {
                                                "oneOf": [
                                                  {
                                                    "type": "boolean"
                                                  },
                                                  {}
                                                ]
                                              }
                                            },
                                            "required": ["tool_name"]
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    }
                                  ],
                                  "nullable": true
                                }
                              },
                              {}
                            ],
                            "nullable": true
                          },
                          "message_ids": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              {
                                "type": "string",
                                "format": "null",
                                "nullable": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    }
                                  ],
                                  "nullable": true
                                }
                              },
                              {}
                            ],
                            "nullable": true
                          },
                          "system": {
                            "type": "string"
                          },
                          "agent_type": {
                            "type": "string",
                            "enum": [
                              "memgpt_agent",
                              "split_thread_agent",
                              "offline_memory_agent",
                              "chat_only_agent"
                            ]
                          },
                          "llm_config": {
                            "type": "object",
                            "properties": {
                              "model": {
                                "type": "string"
                              },
                              "model_endpoint_type": {
                                "type": "string",
                                "enum": [
                                  "openai",
                                  "anthropic",
                                  "cohere",
                                  "google_ai",
                                  "azure",
                                  "groq",
                                  "ollama",
                                  "webui",
                                  "webui-legacy",
                                  "lmstudio",
                                  "lmstudio-legacy",
                                  "llamacpp",
                                  "koboldcpp",
                                  "vllm",
                                  "hugging-face",
                                  "mistral",
                                  "together",
                                  "bedrock"
                                ]
                              },
                              "model_endpoint": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "string",
                                    "format": "null",
                                    "nullable": true
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        }
                                      ],
                                      "nullable": true
                                    }
                                  },
                                  {}
                                ],
                                "nullable": true
                              },
                              "model_wrapper": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "string",
                                    "format": "null",
                                    "nullable": true
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        }
                                      ],
                                      "nullable": true
                                    }
                                  },
                                  {}
                                ],
                                "nullable": true
                              },
                              "context_window": {
                                "type": "number"
                              },
                              "put_inner_thoughts_in_kwargs": {
                                "oneOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "type": "string",
                                    "format": "null",
                                    "nullable": true
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        }
                                      ],
                                      "nullable": true
                                    }
                                  },
                                  {}
                                ],
                                "nullable": true
                              },
                              "handle": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "string",
                                    "format": "null",
                                    "nullable": true
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        }
                                      ],
                                      "nullable": true
                                    }
                                  },
                                  {}
                                ],
                                "nullable": true
                              },
                              "temperature": {
                                "oneOf": [
                                  {
                                    "type": "number"
                                  },
                                  {}
                                ]
                              }
                            },
                            "required": [
                              "model",
                              "model_endpoint_type",
                              "context_window"
                            ]
                          },
                          "embedding_config": {
                            "type": "object",
                            "properties": {
                              "embedding_endpoint_type": {
                                "type": "string",
                                "enum": [
                                  "openai",
                                  "anthropic",
                                  "bedrock",
                                  "cohere",
                                  "google_ai",
                                  "azure",
                                  "groq",
                                  "ollama",
                                  "webui",
                                  "webui-legacy",
                                  "lmstudio",
                                  "lmstudio-legacy",
                                  "llamacpp",
                                  "koboldcpp",
                                  "vllm",
                                  "hugging-face",
                                  "mistral",
                                  "together"
                                ]
                              },
                              "embedding_endpoint": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "string",
                                    "format": "null",
                                    "nullable": true
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        }
                                      ],
                                      "nullable": true
                                    }
                                  },
                                  {}
                                ],
                                "nullable": true
                              },
                              "embedding_model": {
                                "type": "string"
                              },
                              "embedding_dim": {
                                "type": "number"
                              },
                              "embedding_chunk_size": {
                                "oneOf": [
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "string",
                                    "format": "null",
                                    "nullable": true
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        }
                                      ],
                                      "nullable": true
                                    }
                                  },
                                  {}
                                ],
                                "nullable": true
                              },
                              "handle": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "string",
                                    "format": "null",
                                    "nullable": true
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        }
                                      ],
                                      "nullable": true
                                    }
                                  },
                                  {}
                                ],
                                "nullable": true
                              },
                              "azure_endpoint": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "string",
                                    "format": "null",
                                    "nullable": true
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        }
                                      ],
                                      "nullable": true
                                    }
                                  },
                                  {}
                                ],
                                "nullable": true
                              },
                              "azure_version": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "string",
                                    "format": "null",
                                    "nullable": true
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        }
                                      ],
                                      "nullable": true
                                    }
                                  },
                                  {}
                                ],
                                "nullable": true
                              },
                              "azure_deployment": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "string",
                                    "format": "null",
                                    "nullable": true
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        }
                                      ],
                                      "nullable": true
                                    }
                                  },
                                  {}
                                ],
                                "nullable": true
                              }
                            },
                            "required": [
                              "embedding_endpoint_type",
                              "embedding_model",
                              "embedding_dim"
                            ]
                          },
                          "organization_id": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string",
                                "format": "null",
                                "nullable": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    }
                                  ],
                                  "nullable": true
                                }
                              },
                              {}
                            ],
                            "nullable": true
                          },
                          "description": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string",
                                "format": "null",
                                "nullable": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    }
                                  ],
                                  "nullable": true
                                }
                              },
                              {}
                            ],
                            "nullable": true
                          },
                          "metadata": {
                            "oneOf": [
                              {
                                "nullable": true
                              },
                              {
                                "type": "string",
                                "format": "null",
                                "nullable": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    }
                                  ],
                                  "nullable": true
                                }
                              },
                              {}
                            ],
                            "nullable": true
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "blocks": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "string"
                                    },
                                    "limit": {
                                      "oneOf": [
                                        {
                                          "type": "number"
                                        },
                                        {}
                                      ]
                                    },
                                    "name": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "is_template": {
                                      "oneOf": [
                                        {
                                          "type": "boolean"
                                        },
                                        {}
                                      ]
                                    },
                                    "label": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "description": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "metadata": {
                                      "oneOf": [
                                        {
                                          "nullable": true
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "nullable": true
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "id": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {}
                                      ]
                                    },
                                    "organization_id": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "created_by_id": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "last_updated_by_id": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    }
                                  },
                                  "required": ["value"]
                                }
                              },
                              "prompt_template": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {}
                                ]
                              }
                            },
                            "required": ["blocks"]
                          },
                          "tools": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "tool_type": {
                                  "type": "string",
                                  "enum": [
                                    "custom",
                                    "letta_core",
                                    "letta_memory_core",
                                    "letta_multi_agent_core",
                                    "external_composio",
                                    "external_langchain"
                                  ]
                                },
                                "description": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    }
                                  ],
                                  "nullable": true
                                },
                                "source_type": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    }
                                  ],
                                  "nullable": true
                                },
                                "organization_id": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    }
                                  ],
                                  "nullable": true
                                },
                                "name": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    }
                                  ],
                                  "nullable": true
                                },
                                "tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "source_code": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    }
                                  ],
                                  "nullable": true
                                },
                                "json_schema": {
                                  "oneOf": [
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "nullable": true
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    }
                                  ],
                                  "nullable": true
                                },
                                "return_char_limit": {
                                  "type": "number"
                                },
                                "created_by_id": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    }
                                  ],
                                  "nullable": true
                                },
                                "last_updated_by_id": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    }
                                  ],
                                  "nullable": true
                                }
                              }
                            }
                          },
                          "sources": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {}
                                  ]
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    },
                                    {}
                                  ],
                                  "nullable": true
                                },
                                "embedding_config": {
                                  "type": "object",
                                  "properties": {
                                    "embedding_endpoint_type": {
                                      "type": "string",
                                      "enum": [
                                        "openai",
                                        "anthropic",
                                        "bedrock",
                                        "cohere",
                                        "google_ai",
                                        "azure",
                                        "groq",
                                        "ollama",
                                        "webui",
                                        "webui-legacy",
                                        "lmstudio",
                                        "lmstudio-legacy",
                                        "llamacpp",
                                        "koboldcpp",
                                        "vllm",
                                        "hugging-face",
                                        "mistral",
                                        "together"
                                      ]
                                    },
                                    "embedding_endpoint": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "embedding_model": {
                                      "type": "string"
                                    },
                                    "embedding_dim": {
                                      "type": "number"
                                    },
                                    "embedding_chunk_size": {
                                      "oneOf": [
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "number"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "handle": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "azure_endpoint": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "azure_version": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "azure_deployment": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    }
                                  },
                                  "required": [
                                    "embedding_endpoint_type",
                                    "embedding_model",
                                    "embedding_dim"
                                  ]
                                },
                                "organization_id": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    },
                                    {}
                                  ],
                                  "nullable": true
                                },
                                "metadata": {
                                  "oneOf": [
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "nullable": true
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    },
                                    {}
                                  ],
                                  "nullable": true
                                },
                                "created_by_id": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    },
                                    {}
                                  ],
                                  "nullable": true
                                },
                                "last_updated_by_id": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    },
                                    {}
                                  ],
                                  "nullable": true
                                },
                                "created_at": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    },
                                    {}
                                  ],
                                  "nullable": true
                                },
                                "updated_at": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    },
                                    {}
                                  ],
                                  "nullable": true
                                }
                              },
                              "required": ["name", "embedding_config"]
                            }
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "tool_exec_environment_variables": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "created_by_id": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "last_updated_by_id": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "created_at": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "updated_at": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "id": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {}
                                      ]
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "organization_id": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "agent_id": {
                                      "type": "string"
                                    }
                                  },
                                  "required": ["key", "value", "agent_id"]
                                }
                              },
                              {}
                            ]
                          },
                          "project_id": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string",
                                "format": "null",
                                "nullable": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    }
                                  ],
                                  "nullable": true
                                }
                              },
                              {}
                            ],
                            "nullable": true
                          },
                          "template_id": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string",
                                "format": "null",
                                "nullable": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    }
                                  ],
                                  "nullable": true
                                }
                              },
                              {}
                            ],
                            "nullable": true
                          },
                          "base_template_id": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string",
                                "format": "null",
                                "nullable": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    }
                                  ],
                                  "nullable": true
                                }
                              },
                              {}
                            ],
                            "nullable": true
                          },
                          "template": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "system",
                          "agent_type",
                          "llm_config",
                          "embedding_config",
                          "memory",
                          "tools",
                          "sources",
                          "tags"
                        ]
                      }
                    },
                    "nextCursor": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": ["agents"]
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agent_id}/version-template": {
      "post": {
        "description": "Creates a versioned version of an agent",
        "summary": "Version Agent Template",
        "tags": ["agents"],
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The agent ID of the agent to migrate, if this agent is not a template, it will create a agent template from the agent provided as well"
          },
          {
            "name": "returnAgentState",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "operationId": "agents.versionAgentTemplate",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "migrate_deployed_agents": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201"
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": ["Agent not found"]
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": ["Failed to version agent template"]
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agent_id}/migrate": {
      "post": {
        "description": "Migrate an agent to a new versioned agent template",
        "summary": "Migrate Agent",
        "tags": ["agents"],
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agents.migrateAgent",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "to_template": {
                    "type": "string"
                  },
                  "variables": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "If you chose to not preserve core memories, you should provide the new variables for the core memories"
                  },
                  "preserve_core_memories": {
                    "type": "boolean"
                  }
                },
                "required": ["to_template", "preserve_core_memories"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    }
                  },
                  "required": ["success"]
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Agent provided is a template or not found, you can only migrate deployed agents",
                        "Template version provided does not exist"
                      ]
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "409": {
            "description": "409",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "You can only migrate agents to a new versioned agent template that belongs to the same project"
                      ]
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": ["Migration failed"]
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agent_id}/template": {
      "post": {
        "description": "Create a template from an agent",
        "summary": "Create Template From Agent",
        "tags": ["agents"],
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agents.createTemplateFromAgent",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "templateName": {
                      "type": "string"
                    },
                    "templateId": {
                      "type": "string"
                    }
                  },
                  "required": ["templateName", "templateId"]
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": ["Failed to create agent template"]
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/{agent_id}/core-memory/variables": {
      "get": {
        "description": "Get the variables associated with an agent",
        "summary": "Retrieve Memory Variables",
        "tags": ["agents"],
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agents.getAgentVariables",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "variables": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": ["variables"]
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": ["Agent not found"]
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/v1/templates/{project}/{template_version}/agents": {
      "post": {
        "description": "Creates agents given a template",
        "summary": "Create Agents from Template",
        "tags": ["templates"],
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The project slug"
          },
          {
            "name": "template_version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The template version, formatted as {template-name}:{version-number} or {template-name}:latest"
          }
        ],
        "operationId": "templates.createAgentsFromTemplate",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The tags to assign to the agent"
                  },
                  "agent_name": {
                    "type": "string",
                    "description": "The name of the agent, optional otherwise a random one will be assigned"
                  },
                  "memory_variables": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "The memory variables to assign to the agent"
                  },
                  "tool_variables": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "The tool variables to assign to the agent"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "agents": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "created_by_id": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string",
                                "format": "null",
                                "nullable": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    }
                                  ],
                                  "nullable": true
                                }
                              },
                              {}
                            ],
                            "nullable": true
                          },
                          "last_updated_by_id": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string",
                                "format": "null",
                                "nullable": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    }
                                  ],
                                  "nullable": true
                                }
                              },
                              {}
                            ],
                            "nullable": true
                          },
                          "created_at": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string",
                                "format": "null",
                                "nullable": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    }
                                  ],
                                  "nullable": true
                                }
                              },
                              {}
                            ],
                            "nullable": true
                          },
                          "updated_at": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string",
                                "format": "null",
                                "nullable": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    }
                                  ],
                                  "nullable": true
                                }
                              },
                              {}
                            ],
                            "nullable": true
                          },
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "tool_rules": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "tool_name": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "oneOf": [
                                            {
                                              "type": "string",
                                              "enum": ["constrain_child_tools"]
                                            },
                                            {}
                                          ]
                                        },
                                        "children": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": ["tool_name", "children"]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "tool_name": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "oneOf": [
                                            {
                                              "type": "string",
                                              "enum": ["run_first"]
                                            },
                                            {}
                                          ]
                                        }
                                      },
                                      "required": ["tool_name"]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "tool_name": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "oneOf": [
                                            {
                                              "type": "string",
                                              "enum": ["exit_loop"]
                                            },
                                            {}
                                          ]
                                        }
                                      },
                                      "required": ["tool_name"]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "tool_name": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "oneOf": [
                                            {
                                              "type": "string",
                                              "enum": ["conditional"]
                                            },
                                            {}
                                          ]
                                        },
                                        "default_child": {
                                          "oneOf": [
                                            {
                                              "type": "string"
                                            },
                                            {
                                              "type": "string",
                                              "format": "null",
                                              "nullable": true
                                            },
                                            {
                                              "type": "array",
                                              "items": {
                                                "oneOf": [
                                                  {
                                                    "type": "string"
                                                  },
                                                  {
                                                    "type": "string",
                                                    "format": "null",
                                                    "nullable": true
                                                  }
                                                ],
                                                "nullable": true
                                              }
                                            },
                                            {}
                                          ],
                                          "nullable": true
                                        },
                                        "child_output_mapping": {
                                          "nullable": true
                                        },
                                        "require_output_mapping": {
                                          "oneOf": [
                                            {
                                              "type": "boolean"
                                            },
                                            {}
                                          ]
                                        }
                                      },
                                      "required": ["tool_name"]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "string",
                                "format": "null",
                                "nullable": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "tool_name": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "oneOf": [
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "constrain_child_tools"
                                                    ]
                                                  },
                                                  {}
                                                ]
                                              },
                                              "children": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "required": [
                                              "tool_name",
                                              "children"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "tool_name": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "oneOf": [
                                                  {
                                                    "type": "string",
                                                    "enum": ["run_first"]
                                                  },
                                                  {}
                                                ]
                                              }
                                            },
                                            "required": ["tool_name"]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "tool_name": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "oneOf": [
                                                  {
                                                    "type": "string",
                                                    "enum": ["exit_loop"]
                                                  },
                                                  {}
                                                ]
                                              }
                                            },
                                            "required": ["tool_name"]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "tool_name": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "oneOf": [
                                                  {
                                                    "type": "string",
                                                    "enum": ["conditional"]
                                                  },
                                                  {}
                                                ]
                                              },
                                              "default_child": {
                                                "oneOf": [
                                                  {
                                                    "type": "string"
                                                  },
                                                  {
                                                    "type": "string",
                                                    "format": "null",
                                                    "nullable": true
                                                  },
                                                  {
                                                    "type": "array",
                                                    "items": {
                                                      "oneOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "string",
                                                          "format": "null",
                                                          "nullable": true
                                                        }
                                                      ],
                                                      "nullable": true
                                                    }
                                                  },
                                                  {}
                                                ],
                                                "nullable": true
                                              },
                                              "child_output_mapping": {
                                                "nullable": true
                                              },
                                              "require_output_mapping": {
                                                "oneOf": [
                                                  {
                                                    "type": "boolean"
                                                  },
                                                  {}
                                                ]
                                              }
                                            },
                                            "required": ["tool_name"]
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    }
                                  ],
                                  "nullable": true
                                }
                              },
                              {}
                            ],
                            "nullable": true
                          },
                          "message_ids": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              {
                                "type": "string",
                                "format": "null",
                                "nullable": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    }
                                  ],
                                  "nullable": true
                                }
                              },
                              {}
                            ],
                            "nullable": true
                          },
                          "system": {
                            "type": "string"
                          },
                          "agent_type": {
                            "type": "string",
                            "enum": [
                              "memgpt_agent",
                              "split_thread_agent",
                              "offline_memory_agent",
                              "chat_only_agent"
                            ]
                          },
                          "llm_config": {
                            "type": "object",
                            "properties": {
                              "model": {
                                "type": "string"
                              },
                              "model_endpoint_type": {
                                "type": "string",
                                "enum": [
                                  "openai",
                                  "anthropic",
                                  "cohere",
                                  "google_ai",
                                  "azure",
                                  "groq",
                                  "ollama",
                                  "webui",
                                  "webui-legacy",
                                  "lmstudio",
                                  "lmstudio-legacy",
                                  "llamacpp",
                                  "koboldcpp",
                                  "vllm",
                                  "hugging-face",
                                  "mistral",
                                  "together",
                                  "bedrock"
                                ]
                              },
                              "model_endpoint": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "string",
                                    "format": "null",
                                    "nullable": true
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        }
                                      ],
                                      "nullable": true
                                    }
                                  },
                                  {}
                                ],
                                "nullable": true
                              },
                              "model_wrapper": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "string",
                                    "format": "null",
                                    "nullable": true
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        }
                                      ],
                                      "nullable": true
                                    }
                                  },
                                  {}
                                ],
                                "nullable": true
                              },
                              "context_window": {
                                "type": "number"
                              },
                              "put_inner_thoughts_in_kwargs": {
                                "oneOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "type": "string",
                                    "format": "null",
                                    "nullable": true
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        }
                                      ],
                                      "nullable": true
                                    }
                                  },
                                  {}
                                ],
                                "nullable": true
                              },
                              "handle": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "string",
                                    "format": "null",
                                    "nullable": true
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        }
                                      ],
                                      "nullable": true
                                    }
                                  },
                                  {}
                                ],
                                "nullable": true
                              },
                              "temperature": {
                                "oneOf": [
                                  {
                                    "type": "number"
                                  },
                                  {}
                                ]
                              }
                            },
                            "required": [
                              "model",
                              "model_endpoint_type",
                              "context_window"
                            ]
                          },
                          "embedding_config": {
                            "type": "object",
                            "properties": {
                              "embedding_endpoint_type": {
                                "type": "string",
                                "enum": [
                                  "openai",
                                  "anthropic",
                                  "bedrock",
                                  "cohere",
                                  "google_ai",
                                  "azure",
                                  "groq",
                                  "ollama",
                                  "webui",
                                  "webui-legacy",
                                  "lmstudio",
                                  "lmstudio-legacy",
                                  "llamacpp",
                                  "koboldcpp",
                                  "vllm",
                                  "hugging-face",
                                  "mistral",
                                  "together"
                                ]
                              },
                              "embedding_endpoint": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "string",
                                    "format": "null",
                                    "nullable": true
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        }
                                      ],
                                      "nullable": true
                                    }
                                  },
                                  {}
                                ],
                                "nullable": true
                              },
                              "embedding_model": {
                                "type": "string"
                              },
                              "embedding_dim": {
                                "type": "number"
                              },
                              "embedding_chunk_size": {
                                "oneOf": [
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "string",
                                    "format": "null",
                                    "nullable": true
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        }
                                      ],
                                      "nullable": true
                                    }
                                  },
                                  {}
                                ],
                                "nullable": true
                              },
                              "handle": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "string",
                                    "format": "null",
                                    "nullable": true
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        }
                                      ],
                                      "nullable": true
                                    }
                                  },
                                  {}
                                ],
                                "nullable": true
                              },
                              "azure_endpoint": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "string",
                                    "format": "null",
                                    "nullable": true
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        }
                                      ],
                                      "nullable": true
                                    }
                                  },
                                  {}
                                ],
                                "nullable": true
                              },
                              "azure_version": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "string",
                                    "format": "null",
                                    "nullable": true
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        }
                                      ],
                                      "nullable": true
                                    }
                                  },
                                  {}
                                ],
                                "nullable": true
                              },
                              "azure_deployment": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "string",
                                    "format": "null",
                                    "nullable": true
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        }
                                      ],
                                      "nullable": true
                                    }
                                  },
                                  {}
                                ],
                                "nullable": true
                              }
                            },
                            "required": [
                              "embedding_endpoint_type",
                              "embedding_model",
                              "embedding_dim"
                            ]
                          },
                          "organization_id": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string",
                                "format": "null",
                                "nullable": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    }
                                  ],
                                  "nullable": true
                                }
                              },
                              {}
                            ],
                            "nullable": true
                          },
                          "description": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string",
                                "format": "null",
                                "nullable": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    }
                                  ],
                                  "nullable": true
                                }
                              },
                              {}
                            ],
                            "nullable": true
                          },
                          "metadata": {
                            "oneOf": [
                              {
                                "nullable": true
                              },
                              {
                                "type": "string",
                                "format": "null",
                                "nullable": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    }
                                  ],
                                  "nullable": true
                                }
                              },
                              {}
                            ],
                            "nullable": true
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "blocks": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "string"
                                    },
                                    "limit": {
                                      "oneOf": [
                                        {
                                          "type": "number"
                                        },
                                        {}
                                      ]
                                    },
                                    "name": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "is_template": {
                                      "oneOf": [
                                        {
                                          "type": "boolean"
                                        },
                                        {}
                                      ]
                                    },
                                    "label": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "description": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "metadata": {
                                      "oneOf": [
                                        {
                                          "nullable": true
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "nullable": true
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "id": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {}
                                      ]
                                    },
                                    "organization_id": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "created_by_id": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "last_updated_by_id": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    }
                                  },
                                  "required": ["value"]
                                }
                              },
                              "prompt_template": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {}
                                ]
                              }
                            },
                            "required": ["blocks"]
                          },
                          "tools": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "tool_type": {
                                  "type": "string",
                                  "enum": [
                                    "custom",
                                    "letta_core",
                                    "letta_memory_core",
                                    "letta_multi_agent_core",
                                    "external_composio",
                                    "external_langchain"
                                  ]
                                },
                                "description": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    }
                                  ],
                                  "nullable": true
                                },
                                "source_type": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    }
                                  ],
                                  "nullable": true
                                },
                                "organization_id": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    }
                                  ],
                                  "nullable": true
                                },
                                "name": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    }
                                  ],
                                  "nullable": true
                                },
                                "tags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "source_code": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    }
                                  ],
                                  "nullable": true
                                },
                                "json_schema": {
                                  "oneOf": [
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "nullable": true
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    }
                                  ],
                                  "nullable": true
                                },
                                "return_char_limit": {
                                  "type": "number"
                                },
                                "created_by_id": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    }
                                  ],
                                  "nullable": true
                                },
                                "last_updated_by_id": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    }
                                  ],
                                  "nullable": true
                                }
                              }
                            }
                          },
                          "sources": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {}
                                  ]
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    },
                                    {}
                                  ],
                                  "nullable": true
                                },
                                "embedding_config": {
                                  "type": "object",
                                  "properties": {
                                    "embedding_endpoint_type": {
                                      "type": "string",
                                      "enum": [
                                        "openai",
                                        "anthropic",
                                        "bedrock",
                                        "cohere",
                                        "google_ai",
                                        "azure",
                                        "groq",
                                        "ollama",
                                        "webui",
                                        "webui-legacy",
                                        "lmstudio",
                                        "lmstudio-legacy",
                                        "llamacpp",
                                        "koboldcpp",
                                        "vllm",
                                        "hugging-face",
                                        "mistral",
                                        "together"
                                      ]
                                    },
                                    "embedding_endpoint": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "embedding_model": {
                                      "type": "string"
                                    },
                                    "embedding_dim": {
                                      "type": "number"
                                    },
                                    "embedding_chunk_size": {
                                      "oneOf": [
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "number"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "handle": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "azure_endpoint": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "azure_version": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "azure_deployment": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    }
                                  },
                                  "required": [
                                    "embedding_endpoint_type",
                                    "embedding_model",
                                    "embedding_dim"
                                  ]
                                },
                                "organization_id": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    },
                                    {}
                                  ],
                                  "nullable": true
                                },
                                "metadata": {
                                  "oneOf": [
                                    {
                                      "nullable": true
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "nullable": true
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    },
                                    {}
                                  ],
                                  "nullable": true
                                },
                                "created_by_id": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    },
                                    {}
                                  ],
                                  "nullable": true
                                },
                                "last_updated_by_id": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    },
                                    {}
                                  ],
                                  "nullable": true
                                },
                                "created_at": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    },
                                    {}
                                  ],
                                  "nullable": true
                                },
                                "updated_at": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "string",
                                            "format": "null",
                                            "nullable": true
                                          }
                                        ],
                                        "nullable": true
                                      }
                                    },
                                    {}
                                  ],
                                  "nullable": true
                                }
                              },
                              "required": ["name", "embedding_config"]
                            }
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "tool_exec_environment_variables": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "created_by_id": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "last_updated_by_id": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "created_at": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "updated_at": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "id": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {}
                                      ]
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "organization_id": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "string",
                                          "format": "null",
                                          "nullable": true
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "string",
                                                "format": "null",
                                                "nullable": true
                                              }
                                            ],
                                            "nullable": true
                                          }
                                        },
                                        {}
                                      ],
                                      "nullable": true
                                    },
                                    "agent_id": {
                                      "type": "string"
                                    }
                                  },
                                  "required": ["key", "value", "agent_id"]
                                }
                              },
                              {}
                            ]
                          },
                          "project_id": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string",
                                "format": "null",
                                "nullable": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    }
                                  ],
                                  "nullable": true
                                }
                              },
                              {}
                            ],
                            "nullable": true
                          },
                          "template_id": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string",
                                "format": "null",
                                "nullable": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    }
                                  ],
                                  "nullable": true
                                }
                              },
                              {}
                            ],
                            "nullable": true
                          },
                          "base_template_id": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string",
                                "format": "null",
                                "nullable": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "null",
                                      "nullable": true
                                    }
                                  ],
                                  "nullable": true
                                }
                              },
                              {}
                            ],
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "system",
                          "agent_type",
                          "llm_config",
                          "embedding_config",
                          "memory",
                          "tools",
                          "sources",
                          "tags"
                        ]
                      }
                    }
                  },
                  "required": ["agents"]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActionModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "parameters": {
            "$ref": "#/components/schemas/ActionParametersModel"
          },
          "response": {
            "$ref": "#/components/schemas/ActionResponseModel"
          },
          "appName": {
            "type": "string",
            "title": "Appname"
          },
          "appId": {
            "type": "string",
            "title": "Appid"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "available_versions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Available Versions"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "logo": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "parameters",
          "response",
          "appName",
          "appId",
          "version",
          "available_versions",
          "tags"
        ],
        "title": "ActionModel",
        "description": "Action data model."
      },
      "ActionParametersModel": {
        "properties": {
          "properties": {
            "type": "object",
            "title": "Properties"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "required": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Required"
          }
        },
        "type": "object",
        "required": ["properties", "title", "type"],
        "title": "ActionParametersModel",
        "description": "Action parameter data models."
      },
      "ActionResponseModel": {
        "properties": {
          "properties": {
            "type": "object",
            "title": "Properties"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "required": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Required"
          }
        },
        "type": "object",
        "required": ["properties", "title", "type"],
        "title": "ActionResponseModel",
        "description": "Action response data model."
      },
      "AgentEnvironmentVariable": {
        "properties": {
          "created_by_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id",
            "description": "The id of the user that made this object."
          },
          "last_updated_by_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated By Id",
            "description": "The id of the user that made this object."
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "The timestamp when the object was created."
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "The timestamp when the object was last updated."
          },
          "id": {
            "type": "string",
            "pattern": "^agent-env-[a-fA-F0-9]{8}",
            "title": "Id",
            "description": "The human-friendly ID of the Agent-env",
            "examples": ["agent-env-123e4567-e89b-12d3-a456-426614174000"]
          },
          "key": {
            "type": "string",
            "title": "Key",
            "description": "The name of the environment variable."
          },
          "value": {
            "type": "string",
            "title": "Value",
            "description": "The value of the environment variable."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "An optional description of the environment variable."
          },
          "agent_id": {
            "type": "string",
            "title": "Agent Id",
            "description": "The ID of the agent this environment variable belongs to."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["key", "value", "agent_id"],
        "title": "AgentEnvironmentVariable"
      },
      "AgentState": {
        "properties": {
          "created_by_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id",
            "description": "The id of the user that made this object."
          },
          "last_updated_by_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated By Id",
            "description": "The id of the user that made this object."
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "The timestamp when the object was created."
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "The timestamp when the object was last updated."
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The id of the agent. Assigned by the database."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the agent."
          },
          "tool_rules": {
            "anyOf": [
              {
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ChildToolRule"
                    },
                    {
                      "$ref": "#/components/schemas/InitToolRule"
                    },
                    {
                      "$ref": "#/components/schemas/TerminalToolRule"
                    },
                    {
                      "$ref": "#/components/schemas/ConditionalToolRule"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "conditional": "#/components/schemas/ConditionalToolRule",
                      "constrain_child_tools": "#/components/schemas/ChildToolRule",
                      "exit_loop": "#/components/schemas/TerminalToolRule",
                      "run_first": "#/components/schemas/InitToolRule"
                    }
                  }
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Rules",
            "description": "The list of tool rules."
          },
          "message_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message Ids",
            "description": "The ids of the messages in the agent's in-context memory."
          },
          "system": {
            "type": "string",
            "title": "System",
            "description": "The system prompt used by the agent."
          },
          "agent_type": {
            "$ref": "#/components/schemas/AgentType",
            "description": "The type of agent."
          },
          "llm_config": {
            "$ref": "#/components/schemas/LLMConfig",
            "description": "The LLM configuration used by the agent."
          },
          "embedding_config": {
            "$ref": "#/components/schemas/EmbeddingConfig",
            "description": "The embedding configuration used by the agent."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of the agent."
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "The metadata of the agent."
          },
          "memory": {
            "$ref": "#/components/schemas/Memory",
            "description": "The in-context memory of the agent."
          },
          "tools": {
            "items": {
              "$ref": "#/components/schemas/Tool"
            },
            "type": "array",
            "title": "Tools",
            "description": "The tools used by the agent."
          },
          "sources": {
            "items": {
              "$ref": "#/components/schemas/Source"
            },
            "type": "array",
            "title": "Sources",
            "description": "The sources used by the agent."
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "The tags associated with the agent."
          },
          "tool_exec_environment_variables": {
            "items": {
              "$ref": "#/components/schemas/AgentEnvironmentVariable"
            },
            "type": "array",
            "title": "Tool Exec Environment Variables",
            "description": "The environment variables for tool execution specific to this agent."
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id",
            "description": "The id of the project the agent belongs to."
          },
          "template_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Id",
            "description": "The id of the template the agent belongs to."
          },
          "base_template_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Template Id",
            "description": "The base template id of the agent."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "name",
          "system",
          "agent_type",
          "llm_config",
          "embedding_config",
          "memory",
          "tools",
          "sources",
          "tags"
        ],
        "title": "AgentState",
        "description": "Representation of an agent's state. This is the state of the agent at a given time, and is persisted in the DB backend. The state has all the information needed to recreate a persisted agent.\n\nParameters:\n    id (str): The unique identifier of the agent.\n    name (str): The name of the agent (must be unique to the user).\n    created_at (datetime): The datetime the agent was created.\n    message_ids (List[str]): The ids of the messages in the agent's in-context memory.\n    memory (Memory): The in-context memory of the agent.\n    tools (List[str]): The tools used by the agent. This includes any memory editing functions specified in `memory`.\n    system (str): The system prompt used by the agent.\n    llm_config (LLMConfig): The LLM configuration used by the agent.\n    embedding_config (EmbeddingConfig): The embedding configuration used by the agent."
      },
      "AgentType": {
        "type": "string",
        "enum": [
          "memgpt_agent",
          "split_thread_agent",
          "offline_memory_agent",
          "chat_only_agent"
        ],
        "title": "AgentType",
        "description": "Enum to represent the type of agent."
      },
      "AppAuthScheme": {
        "properties": {
          "scheme_name": {
            "type": "string",
            "title": "Scheme Name"
          },
          "auth_mode": {
            "type": "string",
            "enum": [
              "OAUTH2",
              "OAUTH1",
              "API_KEY",
              "BASIC",
              "BEARER_TOKEN",
              "BASIC_WITH_JWT"
            ],
            "title": "Auth Mode"
          },
          "fields": {
            "items": {
              "$ref": "#/components/schemas/AuthSchemeField"
            },
            "type": "array",
            "title": "Fields"
          },
          "proxy": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Proxy"
          },
          "authorization_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorization Url"
          },
          "token_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token Url"
          },
          "default_scopes": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Scopes"
          },
          "token_response_metadata": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token Response Metadata"
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": ["scheme_name", "auth_mode", "fields"],
        "title": "AppAuthScheme",
        "description": "App authenticatio scheme."
      },
      "AppModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "appId": {
            "type": "string",
            "title": "Appid"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "categories": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Categories"
          },
          "meta": {
            "type": "object",
            "title": "Meta"
          },
          "logo": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo"
          },
          "docs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Docs"
          },
          "group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "default": false
          },
          "no_auth": {
            "type": "boolean",
            "title": "No Auth",
            "default": false
          },
          "auth_schemes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AppAuthScheme"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Schemes"
          },
          "testConnectors": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Testconnectors"
          },
          "documentation_doc_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation Doc Text"
          },
          "configuration_docs_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Configuration Docs Text"
          }
        },
        "type": "object",
        "required": [
          "name",
          "key",
          "appId",
          "description",
          "categories",
          "meta"
        ],
        "title": "AppModel",
        "description": "App data model."
      },
      "AssistantMessage": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date"
          },
          "message_type": {
            "type": "string",
            "enum": ["assistant_message"],
            "const": "assistant_message",
            "title": "Message Type",
            "default": "assistant_message"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TextContent"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "text": "#/components/schemas/TextContent"
                    }
                  }
                },
                "type": "array"
              }
            ],
            "title": "Content"
          }
        },
        "type": "object",
        "required": ["id", "date", "content"],
        "title": "AssistantMessage"
      },
      "Audio": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          }
        },
        "type": "object",
        "required": ["id"],
        "title": "Audio"
      },
      "AuthRequest": {
        "properties": {
          "password": {
            "type": "string",
            "title": "Password",
            "description": "Admin password provided when starting the Letta server"
          }
        },
        "type": "object",
        "title": "AuthRequest"
      },
      "AuthResponse": {
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "title": "Uuid",
            "description": "UUID of the user"
          },
          "is_admin": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Admin",
            "description": "Whether the user is an admin"
          }
        },
        "type": "object",
        "required": ["uuid"],
        "title": "AuthResponse"
      },
      "AuthSchemeField": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "default": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default"
          },
          "required": {
            "type": "boolean",
            "title": "Required",
            "default": false
          },
          "expected_from_customer": {
            "type": "boolean",
            "title": "Expected From Customer",
            "default": true
          },
          "get_current_user_endpoint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Get Current User Endpoint"
          }
        },
        "type": "object",
        "required": ["name", "description", "type"],
        "title": "AuthSchemeField",
        "description": "Auth scheme field."
      },
      "Block": {
        "properties": {
          "value": {
            "type": "string",
            "title": "Value",
            "description": "Value of the block."
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Character limit of the block.",
            "default": 5000
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Name of the block if it is a template."
          },
          "is_template": {
            "type": "boolean",
            "title": "Is Template",
            "description": "Whether the block is a template (e.g. saved human/persona options).",
            "default": false
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label",
            "description": "Label of the block (e.g. 'human', 'persona') in the context window."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the block."
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Metadata of the block.",
            "default": {}
          },
          "id": {
            "type": "string",
            "pattern": "^block-[a-fA-F0-9]{8}",
            "title": "Id",
            "description": "The human-friendly ID of the Block",
            "examples": ["block-123e4567-e89b-12d3-a456-426614174000"]
          },
          "created_by_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id",
            "description": "The id of the user that made this Block."
          },
          "last_updated_by_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated By Id",
            "description": "The id of the user that last updated this Block."
          }
        },
        "type": "object",
        "required": ["value"],
        "title": "Block",
        "description": "A Block represents a reserved section of the LLM's context window which is editable. `Block` objects contained in the `Memory` object, which is able to edit the Block values.\n\nParameters:\n    label (str): The label of the block (e.g. 'human', 'persona'). This defines a category for the block.\n    value (str): The value of the block. This is the string that is represented in the context window.\n    limit (int): The character limit of the block.\n    is_template (bool): Whether the block is a template (e.g. saved human/persona options). Non-template blocks are not stored in the database and are ephemeral, while templated blocks are stored in the database.\n    label (str): The label of the block (e.g. 'human', 'persona'). This defines a category for the block.\n    template_name (str): The name of the block template (if it is a template).\n    description (str): Description of the block.\n    metadata (Dict): Metadata of the block.\n    user_id (str): The unique identifier of the user associated with the block."
      },
      "BlockUpdate": {
        "properties": {
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value",
            "description": "Value of the block."
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit",
            "description": "Character limit of the block.",
            "default": 5000
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Name of the block if it is a template."
          },
          "is_template": {
            "type": "boolean",
            "title": "Is Template",
            "description": "Whether the block is a template (e.g. saved human/persona options).",
            "default": false
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label",
            "description": "Label of the block (e.g. 'human', 'persona') in the context window."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the block."
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Metadata of the block.",
            "default": {}
          }
        },
        "type": "object",
        "title": "BlockUpdate",
        "description": "Update a block"
      },
      "Body_upload_file_to_source": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_upload_file_to_source"
      },
      "ChatCompletionAssistantMessageParam": {
        "properties": {
          "role": {
            "type": "string",
            "enum": ["assistant"],
            "const": "assistant",
            "title": "Role"
          },
          "audio": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Audio"
              },
              {
                "type": "null"
              }
            ]
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ChatCompletionContentPartTextParam"
                    },
                    {
                      "$ref": "#/components/schemas/ChatCompletionContentPartRefusalParam"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "function_call": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FunctionCall"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "refusal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refusal"
          },
          "tool_calls": {
            "items": {
              "$ref": "#/components/schemas/ChatCompletionMessageToolCallParam"
            },
            "type": "array",
            "title": "Tool Calls"
          }
        },
        "type": "object",
        "required": ["role"],
        "title": "ChatCompletionAssistantMessageParam"
      },
      "ChatCompletionAudioParam": {
        "properties": {
          "format": {
            "type": "string",
            "enum": ["wav", "mp3", "flac", "opus", "pcm16"],
            "title": "Format"
          },
          "voice": {
            "type": "string",
            "enum": [
              "alloy",
              "ash",
              "ballad",
              "coral",
              "echo",
              "sage",
              "shimmer",
              "verse"
            ],
            "title": "Voice"
          }
        },
        "type": "object",
        "required": ["format", "voice"],
        "title": "ChatCompletionAudioParam"
      },
      "ChatCompletionContentPartImageParam": {
        "properties": {
          "image_url": {
            "$ref": "#/components/schemas/ImageURL"
          },
          "type": {
            "type": "string",
            "enum": ["image_url"],
            "const": "image_url",
            "title": "Type"
          }
        },
        "type": "object",
        "required": ["image_url", "type"],
        "title": "ChatCompletionContentPartImageParam"
      },
      "ChatCompletionContentPartInputAudioParam": {
        "properties": {
          "input_audio": {
            "$ref": "#/components/schemas/InputAudio"
          },
          "type": {
            "type": "string",
            "enum": ["input_audio"],
            "const": "input_audio",
            "title": "Type"
          }
        },
        "type": "object",
        "required": ["input_audio", "type"],
        "title": "ChatCompletionContentPartInputAudioParam"
      },
      "ChatCompletionContentPartRefusalParam": {
        "properties": {
          "refusal": {
            "type": "string",
            "title": "Refusal"
          },
          "type": {
            "type": "string",
            "enum": ["refusal"],
            "const": "refusal",
            "title": "Type"
          }
        },
        "type": "object",
        "required": ["refusal", "type"],
        "title": "ChatCompletionContentPartRefusalParam"
      },
      "ChatCompletionContentPartTextParam": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          },
          "type": {
            "type": "string",
            "enum": ["text"],
            "const": "text",
            "title": "Type"
          }
        },
        "type": "object",
        "required": ["text", "type"],
        "title": "ChatCompletionContentPartTextParam"
      },
      "ChatCompletionDeveloperMessageParam": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/ChatCompletionContentPartTextParam"
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "role": {
            "type": "string",
            "enum": ["developer"],
            "const": "developer",
            "title": "Role"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": ["content", "role"],
        "title": "ChatCompletionDeveloperMessageParam"
      },
      "ChatCompletionFunctionCallOptionParam": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "ChatCompletionFunctionCallOptionParam"
      },
      "ChatCompletionFunctionMessageParam": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "role": {
            "type": "string",
            "enum": ["function"],
            "const": "function",
            "title": "Role"
          }
        },
        "type": "object",
        "required": ["content", "name", "role"],
        "title": "ChatCompletionFunctionMessageParam"
      },
      "ChatCompletionMessageToolCall-Input": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "function": {
            "$ref": "#/components/schemas/openai__types__chat__chat_completion_message_tool_call__Function"
          },
          "type": {
            "type": "string",
            "enum": ["function"],
            "const": "function",
            "title": "Type"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": ["id", "function", "type"],
        "title": "ChatCompletionMessageToolCall"
      },
      "ChatCompletionMessageToolCall-Output": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "function": {
            "$ref": "#/components/schemas/Function-Output"
          },
          "type": {
            "type": "string",
            "enum": ["function"],
            "const": "function",
            "title": "Type"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": ["id", "function", "type"],
        "title": "ChatCompletionMessageToolCall"
      },
      "ChatCompletionMessageToolCallParam": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "function": {
            "$ref": "#/components/schemas/openai__types__chat__chat_completion_message_tool_call_param__Function"
          },
          "type": {
            "type": "string",
            "enum": ["function"],
            "const": "function",
            "title": "Type"
          }
        },
        "type": "object",
        "required": ["id", "function", "type"],
        "title": "ChatCompletionMessageToolCallParam"
      },
      "ChatCompletionNamedToolChoiceParam": {
        "properties": {
          "function": {
            "$ref": "#/components/schemas/openai__types__chat__chat_completion_named_tool_choice_param__Function"
          },
          "type": {
            "type": "string",
            "enum": ["function"],
            "const": "function",
            "title": "Type"
          }
        },
        "type": "object",
        "required": ["function", "type"],
        "title": "ChatCompletionNamedToolChoiceParam"
      },
      "ChatCompletionPredictionContentParam": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/ChatCompletionContentPartTextParam"
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "type": {
            "type": "string",
            "enum": ["content"],
            "const": "content",
            "title": "Type"
          }
        },
        "type": "object",
        "required": ["content", "type"],
        "title": "ChatCompletionPredictionContentParam"
      },
      "ChatCompletionStreamOptionsParam": {
        "properties": {
          "include_usage": {
            "type": "boolean",
            "title": "Include Usage"
          }
        },
        "type": "object",
        "title": "ChatCompletionStreamOptionsParam"
      },
      "ChatCompletionSystemMessageParam": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/ChatCompletionContentPartTextParam"
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "role": {
            "type": "string",
            "enum": ["system"],
            "const": "system",
            "title": "Role"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": ["content", "role"],
        "title": "ChatCompletionSystemMessageParam"
      },
      "ChatCompletionToolMessageParam": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/ChatCompletionContentPartTextParam"
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "role": {
            "type": "string",
            "enum": ["tool"],
            "const": "tool",
            "title": "Role"
          },
          "tool_call_id": {
            "type": "string",
            "title": "Tool Call Id"
          }
        },
        "type": "object",
        "required": ["content", "role", "tool_call_id"],
        "title": "ChatCompletionToolMessageParam"
      },
      "ChatCompletionToolParam": {
        "properties": {
          "function": {
            "$ref": "#/components/schemas/FunctionDefinition-Input"
          },
          "type": {
            "type": "string",
            "enum": ["function"],
            "const": "function",
            "title": "Type"
          }
        },
        "type": "object",
        "required": ["function", "type"],
        "title": "ChatCompletionToolParam"
      },
      "ChatCompletionUserMessageParam": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ChatCompletionContentPartTextParam"
                    },
                    {
                      "$ref": "#/components/schemas/ChatCompletionContentPartImageParam"
                    },
                    {
                      "$ref": "#/components/schemas/ChatCompletionContentPartInputAudioParam"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "role": {
            "type": "string",
            "enum": ["user"],
            "const": "user",
            "title": "Role"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": ["content", "role"],
        "title": "ChatCompletionUserMessageParam"
      },
      "ChildToolRule": {
        "properties": {
          "tool_name": {
            "type": "string",
            "title": "Tool Name",
            "description": "The name of the tool. Must exist in the database for the user's organization."
          },
          "type": {
            "type": "string",
            "enum": ["constrain_child_tools"],
            "const": "constrain_child_tools",
            "title": "Type",
            "default": "constrain_child_tools"
          },
          "children": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Children",
            "description": "The children tools that can be invoked."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["tool_name", "children"],
        "title": "ChildToolRule",
        "description": "A ToolRule represents a tool that can be invoked by the agent."
      },
      "CompletionCreateParamsNonStreaming": {
        "properties": {
          "messages": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ChatCompletionDeveloperMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionSystemMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionUserMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionAssistantMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionToolMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionFunctionMessageParam"
                }
              ]
            },
            "type": "array",
            "title": "Messages"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "enum": [
                  "o1",
                  "o1-2024-12-17",
                  "o1-preview",
                  "o1-preview-2024-09-12",
                  "o1-mini",
                  "o1-mini-2024-09-12",
                  "gpt-4o",
                  "gpt-4o-2024-11-20",
                  "gpt-4o-2024-08-06",
                  "gpt-4o-2024-05-13",
                  "gpt-4o-audio-preview",
                  "gpt-4o-audio-preview-2024-10-01",
                  "gpt-4o-audio-preview-2024-12-17",
                  "gpt-4o-mini-audio-preview",
                  "gpt-4o-mini-audio-preview-2024-12-17",
                  "chatgpt-4o-latest",
                  "gpt-4o-mini",
                  "gpt-4o-mini-2024-07-18",
                  "gpt-4-turbo",
                  "gpt-4-turbo-2024-04-09",
                  "gpt-4-0125-preview",
                  "gpt-4-turbo-preview",
                  "gpt-4-1106-preview",
                  "gpt-4-vision-preview",
                  "gpt-4",
                  "gpt-4-0314",
                  "gpt-4-0613",
                  "gpt-4-32k",
                  "gpt-4-32k-0314",
                  "gpt-4-32k-0613",
                  "gpt-3.5-turbo",
                  "gpt-3.5-turbo-16k",
                  "gpt-3.5-turbo-0301",
                  "gpt-3.5-turbo-0613",
                  "gpt-3.5-turbo-1106",
                  "gpt-3.5-turbo-0125",
                  "gpt-3.5-turbo-16k-0613"
                ]
              }
            ],
            "title": "Model"
          },
          "audio": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChatCompletionAudioParam"
              },
              {
                "type": "null"
              }
            ]
          },
          "frequency_penalty": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Frequency Penalty"
          },
          "function_call": {
            "anyOf": [
              {
                "type": "string",
                "enum": ["none", "auto"]
              },
              {
                "$ref": "#/components/schemas/ChatCompletionFunctionCallOptionParam"
              }
            ],
            "title": "Function Call"
          },
          "functions": {
            "items": {
              "$ref": "#/components/schemas/openai__types__chat__completion_create_params__Function"
            },
            "type": "array",
            "title": "Functions"
          },
          "logit_bias": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logit Bias"
          },
          "logprobs": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logprobs"
          },
          "max_completion_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Completion Tokens"
          },
          "max_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Tokens"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "modalities": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "enum": ["text", "audio"]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modalities"
          },
          "n": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "N"
          },
          "parallel_tool_calls": {
            "type": "boolean",
            "title": "Parallel Tool Calls"
          },
          "prediction": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChatCompletionPredictionContentParam"
              },
              {
                "type": "null"
              }
            ]
          },
          "presence_penalty": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Presence Penalty"
          },
          "reasoning_effort": {
            "type": "string",
            "enum": ["low", "medium", "high"],
            "title": "Reasoning Effort"
          },
          "response_format": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResponseFormatText"
              },
              {
                "$ref": "#/components/schemas/ResponseFormatJSONObject"
              },
              {
                "$ref": "#/components/schemas/ResponseFormatJSONSchema"
              }
            ],
            "title": "Response Format"
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed"
          },
          "service_tier": {
            "anyOf": [
              {
                "type": "string",
                "enum": ["auto", "default"]
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Tier"
          },
          "stop": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stop"
          },
          "store": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Store"
          },
          "stream_options": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChatCompletionStreamOptionsParam"
              },
              {
                "type": "null"
              }
            ]
          },
          "temperature": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Temperature"
          },
          "tool_choice": {
            "anyOf": [
              {
                "type": "string",
                "enum": ["none", "auto", "required"]
              },
              {
                "$ref": "#/components/schemas/ChatCompletionNamedToolChoiceParam"
              }
            ],
            "title": "Tool Choice"
          },
          "tools": {
            "items": {
              "$ref": "#/components/schemas/ChatCompletionToolParam"
            },
            "type": "array",
            "title": "Tools"
          },
          "top_logprobs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Top Logprobs"
          },
          "top_p": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Top P"
          },
          "user": {
            "type": "string",
            "title": "User"
          },
          "stream": {
            "anyOf": [
              {
                "type": "boolean",
                "enum": [false],
                "const": false
              },
              {
                "type": "null"
              }
            ],
            "title": "Stream"
          }
        },
        "type": "object",
        "required": ["messages", "model"],
        "title": "CompletionCreateParamsNonStreaming"
      },
      "CompletionCreateParamsStreaming": {
        "properties": {
          "messages": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ChatCompletionDeveloperMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionSystemMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionUserMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionAssistantMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionToolMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionFunctionMessageParam"
                }
              ]
            },
            "type": "array",
            "title": "Messages"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "enum": [
                  "o1",
                  "o1-2024-12-17",
                  "o1-preview",
                  "o1-preview-2024-09-12",
                  "o1-mini",
                  "o1-mini-2024-09-12",
                  "gpt-4o",
                  "gpt-4o-2024-11-20",
                  "gpt-4o-2024-08-06",
                  "gpt-4o-2024-05-13",
                  "gpt-4o-audio-preview",
                  "gpt-4o-audio-preview-2024-10-01",
                  "gpt-4o-audio-preview-2024-12-17",
                  "gpt-4o-mini-audio-preview",
                  "gpt-4o-mini-audio-preview-2024-12-17",
                  "chatgpt-4o-latest",
                  "gpt-4o-mini",
                  "gpt-4o-mini-2024-07-18",
                  "gpt-4-turbo",
                  "gpt-4-turbo-2024-04-09",
                  "gpt-4-0125-preview",
                  "gpt-4-turbo-preview",
                  "gpt-4-1106-preview",
                  "gpt-4-vision-preview",
                  "gpt-4",
                  "gpt-4-0314",
                  "gpt-4-0613",
                  "gpt-4-32k",
                  "gpt-4-32k-0314",
                  "gpt-4-32k-0613",
                  "gpt-3.5-turbo",
                  "gpt-3.5-turbo-16k",
                  "gpt-3.5-turbo-0301",
                  "gpt-3.5-turbo-0613",
                  "gpt-3.5-turbo-1106",
                  "gpt-3.5-turbo-0125",
                  "gpt-3.5-turbo-16k-0613"
                ]
              }
            ],
            "title": "Model"
          },
          "audio": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChatCompletionAudioParam"
              },
              {
                "type": "null"
              }
            ]
          },
          "frequency_penalty": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Frequency Penalty"
          },
          "function_call": {
            "anyOf": [
              {
                "type": "string",
                "enum": ["none", "auto"]
              },
              {
                "$ref": "#/components/schemas/ChatCompletionFunctionCallOptionParam"
              }
            ],
            "title": "Function Call"
          },
          "functions": {
            "items": {
              "$ref": "#/components/schemas/openai__types__chat__completion_create_params__Function"
            },
            "type": "array",
            "title": "Functions"
          },
          "logit_bias": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logit Bias"
          },
          "logprobs": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logprobs"
          },
          "max_completion_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Completion Tokens"
          },
          "max_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Tokens"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "modalities": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "enum": ["text", "audio"]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modalities"
          },
          "n": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "N"
          },
          "parallel_tool_calls": {
            "type": "boolean",
            "title": "Parallel Tool Calls"
          },
          "prediction": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChatCompletionPredictionContentParam"
              },
              {
                "type": "null"
              }
            ]
          },
          "presence_penalty": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Presence Penalty"
          },
          "reasoning_effort": {
            "type": "string",
            "enum": ["low", "medium", "high"],
            "title": "Reasoning Effort"
          },
          "response_format": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResponseFormatText"
              },
              {
                "$ref": "#/components/schemas/ResponseFormatJSONObject"
              },
              {
                "$ref": "#/components/schemas/ResponseFormatJSONSchema"
              }
            ],
            "title": "Response Format"
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed"
          },
          "service_tier": {
            "anyOf": [
              {
                "type": "string",
                "enum": ["auto", "default"]
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Tier"
          },
          "stop": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stop"
          },
          "store": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Store"
          },
          "stream_options": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChatCompletionStreamOptionsParam"
              },
              {
                "type": "null"
              }
            ]
          },
          "temperature": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Temperature"
          },
          "tool_choice": {
            "anyOf": [
              {
                "type": "string",
                "enum": ["none", "auto", "required"]
              },
              {
                "$ref": "#/components/schemas/ChatCompletionNamedToolChoiceParam"
              }
            ],
            "title": "Tool Choice"
          },
          "tools": {
            "items": {
              "$ref": "#/components/schemas/ChatCompletionToolParam"
            },
            "type": "array",
            "title": "Tools"
          },
          "top_logprobs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Top Logprobs"
          },
          "top_p": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Top P"
          },
          "user": {
            "type": "string",
            "title": "User"
          },
          "stream": {
            "type": "boolean",
            "enum": [true],
            "const": true,
            "title": "Stream"
          }
        },
        "type": "object",
        "required": ["messages", "model", "stream"],
        "title": "CompletionCreateParamsStreaming"
      },
      "ConditionalToolRule": {
        "properties": {
          "tool_name": {
            "type": "string",
            "title": "Tool Name",
            "description": "The name of the tool. Must exist in the database for the user's organization."
          },
          "type": {
            "type": "string",
            "enum": ["conditional"],
            "const": "conditional",
            "title": "Type",
            "default": "conditional"
          },
          "default_child": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Child",
            "description": "The default child tool to be called. If None, any tool can be called."
          },
          "child_output_mapping": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Child Output Mapping",
            "description": "The output case to check for mapping"
          },
          "require_output_mapping": {
            "type": "boolean",
            "title": "Require Output Mapping",
            "description": "Whether to throw an error when output doesn't match any case",
            "default": false
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["tool_name", "child_output_mapping"],
        "title": "ConditionalToolRule",
        "description": "A ToolRule that conditionally maps to different child tools based on the output."
      },
      "ContextWindowOverview": {
        "properties": {
          "context_window_size_max": {
            "type": "integer",
            "title": "Context Window Size Max",
            "description": "The maximum amount of tokens the context window can hold."
          },
          "context_window_size_current": {
            "type": "integer",
            "title": "Context Window Size Current",
            "description": "The current number of tokens in the context window."
          },
          "num_messages": {
            "type": "integer",
            "title": "Num Messages",
            "description": "The number of messages in the context window."
          },
          "num_archival_memory": {
            "type": "integer",
            "title": "Num Archival Memory",
            "description": "The number of messages in the archival memory."
          },
          "num_recall_memory": {
            "type": "integer",
            "title": "Num Recall Memory",
            "description": "The number of messages in the recall memory."
          },
          "num_tokens_external_memory_summary": {
            "type": "integer",
            "title": "Num Tokens External Memory Summary",
            "description": "The number of tokens in the external memory summary (archival + recall metadata)."
          },
          "external_memory_summary": {
            "type": "string",
            "title": "External Memory Summary",
            "description": "The metadata summary of the external memory sources (archival + recall metadata)."
          },
          "num_tokens_system": {
            "type": "integer",
            "title": "Num Tokens System",
            "description": "The number of tokens in the system prompt."
          },
          "system_prompt": {
            "type": "string",
            "title": "System Prompt",
            "description": "The content of the system prompt."
          },
          "num_tokens_core_memory": {
            "type": "integer",
            "title": "Num Tokens Core Memory",
            "description": "The number of tokens in the core memory."
          },
          "core_memory": {
            "type": "string",
            "title": "Core Memory",
            "description": "The content of the core memory."
          },
          "num_tokens_summary_memory": {
            "type": "integer",
            "title": "Num Tokens Summary Memory",
            "description": "The number of tokens in the summary memory."
          },
          "summary_memory": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Summary Memory",
            "description": "The content of the summary memory."
          },
          "num_tokens_functions_definitions": {
            "type": "integer",
            "title": "Num Tokens Functions Definitions",
            "description": "The number of tokens in the functions definitions."
          },
          "functions_definitions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FunctionTool"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Functions Definitions",
            "description": "The content of the functions definitions."
          },
          "num_tokens_messages": {
            "type": "integer",
            "title": "Num Tokens Messages",
            "description": "The number of tokens in the messages list."
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "type": "array",
            "title": "Messages",
            "description": "The messages in the context window."
          }
        },
        "type": "object",
        "required": [
          "context_window_size_max",
          "context_window_size_current",
          "num_messages",
          "num_archival_memory",
          "num_recall_memory",
          "num_tokens_external_memory_summary",
          "external_memory_summary",
          "num_tokens_system",
          "system_prompt",
          "num_tokens_core_memory",
          "core_memory",
          "num_tokens_summary_memory",
          "num_tokens_functions_definitions",
          "functions_definitions",
          "num_tokens_messages",
          "messages"
        ],
        "title": "ContextWindowOverview",
        "description": "Overview of the context window, including the number of messages and tokens."
      },
      "CreateAgentRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the agent."
          },
          "memory_blocks": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CreateBlock"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Memory Blocks",
            "description": "The blocks to create in the agent's in-context memory."
          },
          "tools": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tools",
            "description": "The tools used by the agent."
          },
          "tool_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Ids",
            "description": "The ids of the tools used by the agent."
          },
          "source_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Ids",
            "description": "The ids of the sources used by the agent."
          },
          "block_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block Ids",
            "description": "The ids of the blocks used by the agent."
          },
          "tool_rules": {
            "anyOf": [
              {
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ChildToolRule"
                    },
                    {
                      "$ref": "#/components/schemas/InitToolRule"
                    },
                    {
                      "$ref": "#/components/schemas/TerminalToolRule"
                    },
                    {
                      "$ref": "#/components/schemas/ConditionalToolRule"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "conditional": "#/components/schemas/ConditionalToolRule",
                      "constrain_child_tools": "#/components/schemas/ChildToolRule",
                      "exit_loop": "#/components/schemas/TerminalToolRule",
                      "run_first": "#/components/schemas/InitToolRule"
                    }
                  }
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Rules",
            "description": "The tool rules governing the agent."
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "The tags associated with the agent."
          },
          "system": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System",
            "description": "The system prompt used by the agent."
          },
          "agent_type": {
            "$ref": "#/components/schemas/AgentType",
            "description": "The type of agent."
          },
          "llm_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LLMConfig"
              },
              {
                "type": "null"
              }
            ],
            "description": "The LLM configuration used by the agent."
          },
          "embedding_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EmbeddingConfig"
              },
              {
                "type": "null"
              }
            ],
            "description": "The embedding configuration used by the agent."
          },
          "initial_message_sequence": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MessageCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Initial Message Sequence",
            "description": "The initial set of messages to put in the agent's in-context memory."
          },
          "include_base_tools": {
            "type": "boolean",
            "title": "Include Base Tools",
            "description": "If true, attaches the Letta core tools (e.g. archival_memory and core_memory related functions).",
            "default": true
          },
          "include_multi_agent_tools": {
            "type": "boolean",
            "title": "Include Multi Agent Tools",
            "description": "If true, attaches the Letta multi-agent tools (e.g. sending a message to another agent).",
            "default": false
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of the agent."
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "The metadata of the agent."
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model",
            "description": "The LLM configuration handle used by the agent, specified in the format provider/model-name, as an alternative to specifying llm_config."
          },
          "embedding": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Embedding",
            "description": "The embedding configuration handle used by the agent, specified in the format provider/model-name."
          },
          "context_window_limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context Window Limit",
            "description": "The context window limit used by the agent."
          },
          "embedding_chunk_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Embedding Chunk Size",
            "description": "The embedding chunk size used by the agent.",
            "default": 300
          },
          "from_template": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Template",
            "description": "The template id used to configure the agent"
          },
          "template": {
            "type": "boolean",
            "title": "Template",
            "description": "Whether the agent is a template",
            "default": false
          },
          "project": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project",
            "description": "The project slug that the agent will be associated with."
          },
          "tool_exec_environment_variables": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Exec Environment Variables",
            "description": "The environment variables for tool execution specific to this agent."
          },
          "memory_variables": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Memory Variables",
            "description": "The variables that should be set for the agent."
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id",
            "description": "The id of the project the agent belongs to."
          },
          "template_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Id",
            "description": "The id of the template the agent belongs to."
          },
          "base_template_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Template Id",
            "description": "The base template id of the agent."
          }
        },
        "type": "object",
        "title": "CreateAgentRequest",
        "description": "CreateAgent model specifically for POST request body, excluding user_id which comes from headers"
      },
      "CreateArchivalMemory": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "Text to write to archival memory."
          }
        },
        "type": "object",
        "required": ["text"],
        "title": "CreateArchivalMemory"
      },
      "CreateBlock": {
        "properties": {
          "value": {
            "type": "string",
            "title": "Value",
            "description": "Value of the block."
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Character limit of the block.",
            "default": 5000
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Name of the block if it is a template."
          },
          "is_template": {
            "type": "boolean",
            "title": "Is Template",
            "default": false
          },
          "label": {
            "type": "string",
            "title": "Label",
            "description": "Label of the block."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the block."
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Metadata of the block.",
            "default": {}
          }
        },
        "type": "object",
        "required": ["value", "label"],
        "title": "CreateBlock",
        "description": "Create a block"
      },
      "E2BSandboxConfig": {
        "properties": {
          "timeout": {
            "type": "integer",
            "title": "Timeout",
            "description": "Time limit for the sandbox (in seconds).",
            "default": 300
          },
          "template": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template",
            "description": "The E2B template id (docker image)."
          },
          "pip_requirements": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pip Requirements",
            "description": "A list of pip packages to install on the E2B Sandbox"
          }
        },
        "type": "object",
        "title": "E2BSandboxConfig"
      },
      "EmbeddingConfig": {
        "properties": {
          "embedding_endpoint_type": {
            "type": "string",
            "enum": [
              "openai",
              "anthropic",
              "bedrock",
              "cohere",
              "google_ai",
              "azure",
              "groq",
              "ollama",
              "webui",
              "webui-legacy",
              "lmstudio",
              "lmstudio-legacy",
              "llamacpp",
              "koboldcpp",
              "vllm",
              "hugging-face",
              "mistral",
              "together"
            ],
            "title": "Embedding Endpoint Type",
            "description": "The endpoint type for the model."
          },
          "embedding_endpoint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Embedding Endpoint",
            "description": "The endpoint for the model (`None` if local)."
          },
          "embedding_model": {
            "type": "string",
            "title": "Embedding Model",
            "description": "The model for the embedding."
          },
          "embedding_dim": {
            "type": "integer",
            "title": "Embedding Dim",
            "description": "The dimension of the embedding."
          },
          "embedding_chunk_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Embedding Chunk Size",
            "description": "The chunk size of the embedding.",
            "default": 300
          },
          "handle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Handle",
            "description": "The handle for this config, in the format provider/model-name."
          },
          "azure_endpoint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Azure Endpoint",
            "description": "The Azure endpoint for the model."
          },
          "azure_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Azure Version",
            "description": "The Azure version for the model."
          },
          "azure_deployment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Azure Deployment",
            "description": "The Azure deployment for the model."
          }
        },
        "type": "object",
        "required": [
          "embedding_endpoint_type",
          "embedding_model",
          "embedding_dim"
        ],
        "title": "EmbeddingConfig",
        "description": "Embedding model configuration. This object specifies all the information necessary to access an embedding model to usage with Letta, except for secret keys.\n\nAttributes:\n    embedding_endpoint_type (str): The endpoint type for the model.\n    embedding_endpoint (str): The endpoint for the model.\n    embedding_model (str): The model for the embedding.\n    embedding_dim (int): The dimension of the embedding.\n    embedding_chunk_size (int): The chunk size of the embedding.\n    azure_endpoint (:obj:`str`, optional): The Azure endpoint for the model (Azure only).\n    azure_version (str): The Azure version for the model (Azure only).\n    azure_deployment (str): The Azure deployment for the model (Azure only)."
      },
      "FileMetadata": {
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^file-[a-fA-F0-9]{8}",
            "title": "Id",
            "description": "The human-friendly ID of the File",
            "examples": ["file-123e4567-e89b-12d3-a456-426614174000"]
          },
          "source_id": {
            "type": "string",
            "title": "Source Id",
            "description": "The unique identifier of the source associated with the document."
          },
          "file_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Name",
            "description": "The name of the file."
          },
          "file_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Path",
            "description": "The path to the file."
          },
          "file_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Type",
            "description": "The type of the file (MIME type)."
          },
          "file_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Size",
            "description": "The size of the file in bytes."
          },
          "file_creation_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Creation Date",
            "description": "The creation date of the file."
          },
          "file_last_modified_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Last Modified Date",
            "description": "The last modified date of the file."
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "The creation date of the file."
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "The update date of the file."
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted",
            "description": "Whether this file is deleted or not.",
            "default": false
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["source_id"],
        "title": "FileMetadata",
        "description": "Representation of a single FileMetadata"
      },
      "Function-Output": {
        "properties": {
          "arguments": {
            "type": "string",
            "title": "Arguments"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": ["arguments", "name"],
        "title": "Function"
      },
      "FunctionCall": {
        "properties": {
          "arguments": {
            "type": "string",
            "title": "Arguments"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": ["arguments", "name"],
        "title": "FunctionCall"
      },
      "FunctionDefinition-Input": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "parameters": {
            "type": "object",
            "title": "Parameters"
          },
          "strict": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Strict"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "FunctionDefinition"
      },
      "FunctionDefinition-Output": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "parameters": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameters"
          },
          "strict": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Strict"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": ["name"],
        "title": "FunctionDefinition"
      },
      "FunctionTool": {
        "properties": {
          "function": {
            "$ref": "#/components/schemas/FunctionDefinition-Output"
          },
          "type": {
            "type": "string",
            "enum": ["function"],
            "const": "function",
            "title": "Type"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": ["function", "type"],
        "title": "FunctionTool"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Health": {
        "properties": {
          "version": {
            "type": "string",
            "title": "Version"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": ["version", "status"],
        "title": "Health",
        "description": "Health check response body"
      },
      "ImageURL": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "detail": {
            "type": "string",
            "enum": ["auto", "low", "high"],
            "title": "Detail"
          }
        },
        "type": "object",
        "required": ["url"],
        "title": "ImageURL"
      },
      "InitToolRule": {
        "properties": {
          "tool_name": {
            "type": "string",
            "title": "Tool Name",
            "description": "The name of the tool. Must exist in the database for the user's organization."
          },
          "type": {
            "type": "string",
            "enum": ["run_first"],
            "const": "run_first",
            "title": "Type",
            "default": "run_first"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["tool_name"],
        "title": "InitToolRule",
        "description": "Represents the initial tool rule configuration."
      },
      "InputAudio": {
        "properties": {
          "data": {
            "type": "string",
            "title": "Data"
          },
          "format": {
            "type": "string",
            "enum": ["wav", "mp3"],
            "title": "Format"
          }
        },
        "type": "object",
        "required": ["data", "format"],
        "title": "InputAudio"
      },
      "JSONSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "schema": {
            "type": "object",
            "title": "Schema"
          },
          "strict": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Strict"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "JSONSchema"
      },
      "Job": {
        "properties": {
          "created_by_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id",
            "description": "The id of the user that made this object."
          },
          "last_updated_by_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated By Id",
            "description": "The id of the user that made this object."
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "The timestamp when the object was created."
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "The timestamp when the object was last updated."
          },
          "status": {
            "$ref": "#/components/schemas/JobStatus",
            "description": "The status of the job.",
            "default": "created"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At",
            "description": "The unix timestamp of when the job was completed."
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "The metadata of the job."
          },
          "job_type": {
            "$ref": "#/components/schemas/JobType",
            "description": "The type of the job.",
            "default": "job"
          },
          "id": {
            "type": "string",
            "pattern": "^(job|run)-[a-fA-F0-9]{8}",
            "title": "Id",
            "description": "The human-friendly ID of the Job",
            "examples": ["job-123e4567-e89b-12d3-a456-426614174000"]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "Job",
        "description": "Representation of offline jobs, used for tracking status of data loading tasks (involving parsing and embedding files).\n\nParameters:\n    id (str): The unique identifier of the job.\n    status (JobStatus): The status of the job.\n    created_at (datetime): The unix timestamp of when the job was created.\n    completed_at (datetime): The unix timestamp of when the job was completed.\n    user_id (str): The unique identifier of the user associated with the."
      },
      "JobStatus": {
        "type": "string",
        "enum": ["created", "running", "completed", "failed", "pending"],
        "title": "JobStatus",
        "description": "Status of the job."
      },
      "JobType": {
        "type": "string",
        "enum": ["job", "run"],
        "title": "JobType"
      },
      "LLMConfig": {
        "properties": {
          "model": {
            "type": "string",
            "title": "Model",
            "description": "LLM model name. "
          },
          "model_endpoint_type": {
            "type": "string",
            "enum": [
              "openai",
              "anthropic",
              "cohere",
              "google_ai",
              "azure",
              "groq",
              "ollama",
              "webui",
              "webui-legacy",
              "lmstudio",
              "lmstudio-legacy",
              "llamacpp",
              "koboldcpp",
              "vllm",
              "hugging-face",
              "mistral",
              "together",
              "bedrock"
            ],
            "title": "Model Endpoint Type",
            "description": "The endpoint type for the model."
          },
          "model_endpoint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Endpoint",
            "description": "The endpoint for the model."
          },
          "model_wrapper": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Wrapper",
            "description": "The wrapper for the model."
          },
          "context_window": {
            "type": "integer",
            "title": "Context Window",
            "description": "The context window size for the model."
          },
          "put_inner_thoughts_in_kwargs": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Put Inner Thoughts In Kwargs",
            "description": "Puts 'inner_thoughts' as a kwarg in the function call if this is set to True. This helps with function calling performance and also the generation of inner thoughts.",
            "default": true
          },
          "handle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Handle",
            "description": "The handle for this config, in the format provider/model-name."
          },
          "temperature": {
            "type": "number",
            "title": "Temperature",
            "description": "The temperature to use when generating text with the model. A higher temperature will result in more random text.",
            "default": 0.7
          }
        },
        "type": "object",
        "required": ["model", "model_endpoint_type", "context_window"],
        "title": "LLMConfig",
        "description": "Configuration for a Language Model (LLM) model. This object specifies all the information necessary to access an LLM model to usage with Letta, except for secret keys.\n\nAttributes:\n    model (str): The name of the LLM model.\n    model_endpoint_type (str): The endpoint type for the model.\n    model_endpoint (str): The endpoint for the model.\n    model_wrapper (str): The wrapper for the model. This is used to wrap additional text around the input/output of the model. This is useful for text-to-text completions, such as the Completions API in OpenAI.\n    context_window (int): The context window size for the model.\n    put_inner_thoughts_in_kwargs (bool): Puts `inner_thoughts` as a kwarg in the function call if this is set to True. This helps with function calling performance and also the generation of inner thoughts.\n    temperature (float): The temperature to use when generating text with the model. A higher temperature will result in more random text."
      },
      "LettaRequest": {
        "properties": {
          "messages": {
            "items": {
              "$ref": "#/components/schemas/MessageCreate"
            },
            "type": "array",
            "title": "Messages",
            "description": "The messages to be sent to the agent."
          },
          "use_assistant_message": {
            "type": "boolean",
            "title": "Use Assistant Message",
            "description": "Whether the server should parse specific tool call arguments (default `send_message`) as `AssistantMessage` objects.",
            "default": true
          },
          "assistant_message_tool_name": {
            "type": "string",
            "title": "Assistant Message Tool Name",
            "description": "The name of the designated message tool.",
            "default": "send_message"
          },
          "assistant_message_tool_kwarg": {
            "type": "string",
            "title": "Assistant Message Tool Kwarg",
            "description": "The name of the message argument in the designated message tool.",
            "default": "message"
          }
        },
        "type": "object",
        "required": ["messages"],
        "title": "LettaRequest"
      },
      "LettaRequestConfig": {
        "properties": {
          "use_assistant_message": {
            "type": "boolean",
            "title": "Use Assistant Message",
            "description": "Whether the server should parse specific tool call arguments (default `send_message`) as `AssistantMessage` objects.",
            "default": true
          },
          "assistant_message_tool_name": {
            "type": "string",
            "title": "Assistant Message Tool Name",
            "description": "The name of the designated message tool.",
            "default": "send_message"
          },
          "assistant_message_tool_kwarg": {
            "type": "string",
            "title": "Assistant Message Tool Kwarg",
            "description": "The name of the message argument in the designated message tool.",
            "default": "message"
          }
        },
        "type": "object",
        "title": "LettaRequestConfig"
      },
      "LettaResponse": {
        "properties": {
          "messages": {
            "items": {
              "$ref": "#/components/schemas/LettaMessageUnion"
            },
            "type": "array",
            "title": "Messages",
            "description": "The messages returned by the agent."
          },
          "usage": {
            "$ref": "#/components/schemas/LettaUsageStatistics",
            "description": "The usage statistics of the agent."
          }
        },
        "type": "object",
        "required": ["messages", "usage"],
        "title": "LettaResponse",
        "description": "Response object from an agent interaction, consisting of the new messages generated by the agent and usage statistics.\nThe type of the returned messages can be either `Message` or `LettaMessage`, depending on what was specified in the request.\n\nAttributes:\n    messages (List[Union[Message, LettaMessage]]): The messages returned by the agent.\n    usage (LettaUsageStatistics): The usage statistics"
      },
      "LettaStreamingRequest": {
        "properties": {
          "messages": {
            "items": {
              "$ref": "#/components/schemas/MessageCreate"
            },
            "type": "array",
            "title": "Messages",
            "description": "The messages to be sent to the agent."
          },
          "use_assistant_message": {
            "type": "boolean",
            "title": "Use Assistant Message",
            "description": "Whether the server should parse specific tool call arguments (default `send_message`) as `AssistantMessage` objects.",
            "default": true
          },
          "assistant_message_tool_name": {
            "type": "string",
            "title": "Assistant Message Tool Name",
            "description": "The name of the designated message tool.",
            "default": "send_message"
          },
          "assistant_message_tool_kwarg": {
            "type": "string",
            "title": "Assistant Message Tool Kwarg",
            "description": "The name of the message argument in the designated message tool.",
            "default": "message"
          },
          "stream_tokens": {
            "type": "boolean",
            "title": "Stream Tokens",
            "description": "Flag to determine if individual tokens should be streamed. Set to True for token streaming (requires stream_steps = True).",
            "default": false
          }
        },
        "type": "object",
        "required": ["messages"],
        "title": "LettaStreamingRequest"
      },
      "LettaUsageStatistics": {
        "properties": {
          "message_type": {
            "type": "string",
            "enum": ["usage_statistics"],
            "const": "usage_statistics",
            "title": "Message Type",
            "default": "usage_statistics"
          },
          "completion_tokens": {
            "type": "integer",
            "title": "Completion Tokens",
            "description": "The number of tokens generated by the agent.",
            "default": 0
          },
          "prompt_tokens": {
            "type": "integer",
            "title": "Prompt Tokens",
            "description": "The number of tokens in the prompt.",
            "default": 0
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens",
            "description": "The total number of tokens processed by the agent.",
            "default": 0
          },
          "step_count": {
            "type": "integer",
            "title": "Step Count",
            "description": "The number of steps taken by the agent.",
            "default": 0
          }
        },
        "type": "object",
        "title": "LettaUsageStatistics",
        "description": "Usage statistics for the agent interaction.\n\nAttributes:\n    completion_tokens (int): The number of tokens generated by the agent.\n    prompt_tokens (int): The number of tokens in the prompt.\n    total_tokens (int): The total number of tokens processed by the agent.\n    step_count (int): The number of steps taken by the agent."
      },
      "LocalSandboxConfig": {
        "properties": {
          "sandbox_dir": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sandbox Dir",
            "description": "Directory for the sandbox environment."
          },
          "use_venv": {
            "type": "boolean",
            "title": "Use Venv",
            "description": "Whether or not to use the venv, or run directly in the same run loop.",
            "default": false
          },
          "venv_name": {
            "type": "string",
            "title": "Venv Name",
            "description": "The name for the venv in the sandbox directory. We first search for an existing venv with this name, otherwise, we make it from the requirements.txt.",
            "default": "venv"
          },
          "pip_requirements": {
            "items": {
              "$ref": "#/components/schemas/PipRequirement"
            },
            "type": "array",
            "title": "Pip Requirements",
            "description": "List of pip packages to install with mandatory name and optional version following semantic versioning. This only is considered when use_venv is True."
          }
        },
        "type": "object",
        "title": "LocalSandboxConfig"
      },
      "Memory": {
        "properties": {
          "blocks": {
            "items": {
              "$ref": "#/components/schemas/Block"
            },
            "type": "array",
            "title": "Blocks",
            "description": "Memory blocks contained in the agent's in-context memory"
          },
          "prompt_template": {
            "type": "string",
            "title": "Prompt Template",
            "description": "Jinja2 template for compiling memory blocks into a prompt string",
            "default": "{% for block in blocks %}<{{ block.label }} characters=\"{{ block.value|length }}/{{ block.limit }}\">\n{{ block.value }}\n</{{ block.label }}>{% if not loop.last %}\n{% endif %}{% endfor %}"
          }
        },
        "type": "object",
        "required": ["blocks"],
        "title": "Memory",
        "description": "Represents the in-context memory (i.e. Core memory) of the agent. This includes both the `Block` objects (labelled by sections), as well as tools to edit the blocks."
      },
      "Message": {
        "properties": {
          "created_by_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id",
            "description": "The id of the user that made this object."
          },
          "last_updated_by_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated By Id",
            "description": "The id of the user that made this object."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "The timestamp when the object was created."
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "The timestamp when the object was last updated."
          },
          "id": {
            "type": "string",
            "pattern": "^message-[a-fA-F0-9]{8}",
            "title": "Id",
            "description": "The human-friendly ID of the Message",
            "examples": ["message-123e4567-e89b-12d3-a456-426614174000"]
          },
          "role": {
            "$ref": "#/components/schemas/MessageRole",
            "description": "The role of the participant."
          },
          "content": {
            "anyOf": [
              {
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TextContent"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "text": "#/components/schemas/TextContent"
                    }
                  }
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content",
            "description": "The content of the message."
          },
          "agent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Id",
            "description": "The unique identifier of the agent."
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model",
            "description": "The model used to make the function call."
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "The name of the participant."
          },
          "tool_calls": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ChatCompletionMessageToolCall-Output"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Calls",
            "description": "The list of tool calls requested."
          },
          "tool_call_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Call Id",
            "description": "The id of the tool call."
          },
          "step_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Step Id",
            "description": "The id of the step that this message was created in."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["role"],
        "title": "Message",
        "description": "Letta's internal representation of a message. Includes methods to convert to/from LLM provider formats.\n\nAttributes:\n    id (str): The unique identifier of the message.\n    role (MessageRole): The role of the participant.\n    text (str): The text of the message.\n    user_id (str): The unique identifier of the user.\n    agent_id (str): The unique identifier of the agent.\n    model (str): The model used to make the function call.\n    name (str): The name of the participant.\n    created_at (datetime): The time the message was created.\n    tool_calls (List[OpenAIToolCall,]): The list of tool calls requested.\n    tool_call_id (str): The id of the tool call."
      },
      "MessageCreate": {
        "properties": {
          "role": {
            "type": "string",
            "enum": ["user", "system"],
            "title": "Role",
            "description": "The role of the participant."
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TextContent"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "text": "#/components/schemas/TextContent"
                    }
                  }
                },
                "type": "array"
              }
            ],
            "title": "Content",
            "description": "The content of the message."
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "The name of the participant."
          }
        },
        "type": "object",
        "required": ["role", "content"],
        "title": "MessageCreate",
        "description": "Request to create a message"
      },
      "MessageRole": {
        "type": "string",
        "enum": ["assistant", "user", "tool", "function", "system"],
        "title": "MessageRole"
      },
      "MessageUpdate": {
        "properties": {
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MessageRole"
              },
              {
                "type": "null"
              }
            ],
            "description": "The role of the participant."
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TextContent"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "text": "#/components/schemas/TextContent"
                    }
                  }
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content",
            "description": "The content of the message."
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "The name of the participant."
          },
          "tool_calls": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ChatCompletionMessageToolCall-Input"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Calls",
            "description": "The list of tool calls requested."
          },
          "tool_call_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Call Id",
            "description": "The id of the tool call."
          }
        },
        "type": "object",
        "required": ["content"],
        "title": "MessageUpdate",
        "description": "Request to update a message"
      },
      "Organization": {
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^org-[a-fA-F0-9]{8}",
            "title": "Id",
            "description": "The human-friendly ID of the Org",
            "examples": ["org-123e4567-e89b-12d3-a456-426614174000"]
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the organization.",
            "default": "SincereYogurt"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "The creation date of the organization."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "Organization"
      },
      "OrganizationCreate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "The name of the organization."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "OrganizationCreate"
      },
      "Passage": {
        "properties": {
          "created_by_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id",
            "description": "The id of the user that made this object."
          },
          "last_updated_by_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated By Id",
            "description": "The id of the user that made this object."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "The creation date of the passage."
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "The timestamp when the object was last updated."
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted",
            "description": "Whether this passage is deleted or not.",
            "default": false
          },
          "agent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Id",
            "description": "The unique identifier of the agent associated with the passage."
          },
          "source_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Id",
            "description": "The data source of the passage."
          },
          "file_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Id",
            "description": "The unique identifier of the file associated with the passage."
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "The metadata of the passage.",
            "default": {}
          },
          "id": {
            "type": "string",
            "pattern": "^passage-[a-fA-F0-9]{8}",
            "title": "Id",
            "description": "The human-friendly ID of the Passage",
            "examples": ["passage-123e4567-e89b-12d3-a456-426614174000"]
          },
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text of the passage."
          },
          "embedding": {
            "anyOf": [
              {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Embedding",
            "description": "The embedding of the passage."
          },
          "embedding_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EmbeddingConfig"
              },
              {
                "type": "null"
              }
            ],
            "description": "The embedding configuration used by the passage."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["text", "embedding", "embedding_config"],
        "title": "Passage",
        "description": "Representation of a passage, which is stored in archival memory.\n\nParameters:\n    text (str): The text of the passage.\n    embedding (List[float]): The embedding of the passage.\n    embedding_config (EmbeddingConfig): The embedding configuration used by the passage.\n    created_at (datetime): The creation date of the passage.\n    user_id (str): The unique identifier of the user associated with the passage.\n    agent_id (str): The unique identifier of the agent associated with the passage.\n    source_id (str): The data source of the passage.\n    file_id (str): The unique identifier of the file associated with the passage."
      },
      "PipRequirement": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Name",
            "description": "Name of the pip package."
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version",
            "description": "Optional version of the package, following semantic versioning."
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "PipRequirement"
      },
      "Provider": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id",
            "description": "The id of the provider, lazily created by the database manager."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the provider"
          },
          "api_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Key",
            "description": "API key used for requests to the provider."
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "The last update timestamp of the provider."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["name"],
        "title": "Provider"
      },
      "ProviderCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the provider."
          },
          "api_key": {
            "type": "string",
            "title": "Api Key",
            "description": "API key used for requests to the provider."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["name", "api_key"],
        "title": "ProviderCreate"
      },
      "ProviderUpdate": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The id of the provider to update."
          },
          "api_key": {
            "type": "string",
            "title": "Api Key",
            "description": "API key used for requests to the provider."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "api_key"],
        "title": "ProviderUpdate"
      },
      "ReasoningMessage": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date"
          },
          "message_type": {
            "type": "string",
            "enum": ["reasoning_message"],
            "const": "reasoning_message",
            "title": "Message Type",
            "default": "reasoning_message"
          },
          "reasoning": {
            "type": "string",
            "title": "Reasoning"
          }
        },
        "type": "object",
        "required": ["id", "date", "reasoning"],
        "title": "ReasoningMessage",
        "description": "Representation of an agent's internal reasoning.\n\nAttributes:\n    reasoning (str): The internal reasoning of the agent\n    id (str): The ID of the message\n    date (datetime): The date the message was created in ISO format"
      },
      "ResponseFormatJSONObject": {
        "properties": {
          "type": {
            "type": "string",
            "enum": ["json_object"],
            "const": "json_object",
            "title": "Type"
          }
        },
        "type": "object",
        "required": ["type"],
        "title": "ResponseFormatJSONObject"
      },
      "ResponseFormatJSONSchema": {
        "properties": {
          "json_schema": {
            "$ref": "#/components/schemas/JSONSchema"
          },
          "type": {
            "type": "string",
            "enum": ["json_schema"],
            "const": "json_schema",
            "title": "Type"
          }
        },
        "type": "object",
        "required": ["json_schema", "type"],
        "title": "ResponseFormatJSONSchema"
      },
      "ResponseFormatText": {
        "properties": {
          "type": {
            "type": "string",
            "enum": ["text"],
            "const": "text",
            "title": "Type"
          }
        },
        "type": "object",
        "required": ["type"],
        "title": "ResponseFormatText"
      },
      "Run": {
        "properties": {
          "created_by_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id",
            "description": "The id of the user that made this object."
          },
          "last_updated_by_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated By Id",
            "description": "The id of the user that made this object."
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "The timestamp when the object was created."
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "The timestamp when the object was last updated."
          },
          "status": {
            "$ref": "#/components/schemas/JobStatus",
            "description": "The status of the job.",
            "default": "created"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At",
            "description": "The unix timestamp of when the job was completed."
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "The metadata of the job."
          },
          "job_type": {
            "$ref": "#/components/schemas/JobType",
            "default": "run"
          },
          "id": {
            "type": "string",
            "pattern": "^(job|run)-[a-fA-F0-9]{8}",
            "title": "Id",
            "description": "The human-friendly ID of the Run",
            "examples": ["run-123e4567-e89b-12d3-a456-426614174000"]
          },
          "request_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LettaRequestConfig"
              },
              {
                "type": "null"
              }
            ],
            "description": "The request configuration for the run."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "Run",
        "description": "Representation of a run, which is a job with a 'run' prefix in its ID.\nInherits all fields and behavior from Job except for the ID prefix.\n\nParameters:\n    id (str): The unique identifier of the run (prefixed with 'run-').\n    status (JobStatus): The status of the run.\n    created_at (datetime): The unix timestamp of when the run was created.\n    completed_at (datetime): The unix timestamp of when the run was completed.\n    user_id (str): The unique identifier of the user associated with the run."
      },
      "SandboxConfig": {
        "properties": {
          "created_by_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id",
            "description": "The id of the user that made this object."
          },
          "last_updated_by_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated By Id",
            "description": "The id of the user that made this object."
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "The timestamp when the object was created."
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "The timestamp when the object was last updated."
          },
          "id": {
            "type": "string",
            "pattern": "^sandbox-[a-fA-F0-9]{8}",
            "title": "Id",
            "description": "The human-friendly ID of the Sandbox",
            "examples": ["sandbox-123e4567-e89b-12d3-a456-426614174000"]
          },
          "type": {
            "$ref": "#/components/schemas/SandboxType",
            "description": "The type of sandbox."
          },
          "config": {
            "type": "object",
            "title": "Config",
            "description": "The JSON sandbox settings data."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "SandboxConfig"
      },
      "SandboxConfigCreate": {
        "properties": {
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LocalSandboxConfig"
              },
              {
                "$ref": "#/components/schemas/E2BSandboxConfig"
              }
            ],
            "title": "Config",
            "description": "The configuration for the sandbox."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["config"],
        "title": "SandboxConfigCreate"
      },
      "SandboxConfigUpdate": {
        "properties": {
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LocalSandboxConfig"
              },
              {
                "$ref": "#/components/schemas/E2BSandboxConfig"
              }
            ],
            "title": "Config",
            "description": "The JSON configuration data for the sandbox."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "SandboxConfigUpdate",
        "description": "Pydantic model for updating SandboxConfig fields."
      },
      "SandboxEnvironmentVariable": {
        "properties": {
          "created_by_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id",
            "description": "The id of the user that made this object."
          },
          "last_updated_by_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated By Id",
            "description": "The id of the user that made this object."
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "The timestamp when the object was created."
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "The timestamp when the object was last updated."
          },
          "id": {
            "type": "string",
            "pattern": "^sandbox-env-[a-fA-F0-9]{8}",
            "title": "Id",
            "description": "The human-friendly ID of the Sandbox-env",
            "examples": ["sandbox-env-123e4567-e89b-12d3-a456-426614174000"]
          },
          "key": {
            "type": "string",
            "title": "Key",
            "description": "The name of the environment variable."
          },
          "value": {
            "type": "string",
            "title": "Value",
            "description": "The value of the environment variable."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "An optional description of the environment variable."
          },
          "sandbox_config_id": {
            "type": "string",
            "title": "Sandbox Config Id",
            "description": "The ID of the sandbox config this environment variable belongs to."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["key", "value", "sandbox_config_id"],
        "title": "SandboxEnvironmentVariable"
      },
      "SandboxEnvironmentVariableCreate": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key",
            "description": "The name of the environment variable."
          },
          "value": {
            "type": "string",
            "title": "Value",
            "description": "The value of the environment variable."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "An optional description of the environment variable."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["key", "value"],
        "title": "SandboxEnvironmentVariableCreate"
      },
      "SandboxEnvironmentVariableUpdate": {
        "properties": {
          "key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key",
            "description": "The name of the environment variable."
          },
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value",
            "description": "The value of the environment variable."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "An optional description of the environment variable."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "SandboxEnvironmentVariableUpdate"
      },
      "SandboxType": {
        "type": "string",
        "enum": ["e2b", "local"],
        "title": "SandboxType"
      },
      "Source": {
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^source-[a-fA-F0-9]{8}",
            "title": "Id",
            "description": "The human-friendly ID of the Source",
            "examples": ["source-123e4567-e89b-12d3-a456-426614174000"]
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the source."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of the source."
          },
          "embedding_config": {
            "$ref": "#/components/schemas/EmbeddingConfig",
            "description": "The embedding configuration used by the source."
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Metadata associated with the source."
          },
          "created_by_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id",
            "description": "The id of the user that made this Tool."
          },
          "last_updated_by_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated By Id",
            "description": "The id of the user that made this Tool."
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "The timestamp when the source was created."
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "The timestamp when the source was last updated."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["name", "embedding_config"],
        "title": "Source",
        "description": "Representation of a source, which is a collection of files and passages.\n\nParameters:\n    id (str): The ID of the source\n    name (str): The name of the source.\n    embedding_config (EmbeddingConfig): The embedding configuration used by the source.\n    user_id (str): The ID of the user that created the source.\n    metadata (dict): Metadata associated with the source.\n    description (str): The description of the source."
      },
      "SourceCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the source."
          },
          "embedding_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EmbeddingConfig"
              },
              {
                "type": "null"
              }
            ],
            "description": "The embedding configuration used by the source."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of the source."
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Metadata associated with the source."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["name"],
        "title": "SourceCreate",
        "description": "Schema for creating a new Source."
      },
      "SourceUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "The name of the source."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of the source."
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Metadata associated with the source."
          },
          "embedding_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EmbeddingConfig"
              },
              {
                "type": "null"
              }
            ],
            "description": "The embedding configuration used by the source."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "SourceUpdate",
        "description": "Schema for updating an existing Source."
      },
      "Step": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The id of the step. Assigned by the database."
          },
          "origin": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Origin",
            "description": "The surface that this agent step was initiated from."
          },
          "provider_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Id",
            "description": "The unique identifier of the provider that was configured for this step"
          },
          "job_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Id",
            "description": "The unique identifier of the job that this step belongs to. Only included for async calls."
          },
          "provider_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Name",
            "description": "The name of the provider used for this step."
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model",
            "description": "The name of the model used for this step."
          },
          "model_endpoint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Endpoint",
            "description": "The model endpoint url used for this step."
          },
          "context_window_limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context Window Limit",
            "description": "The context window limit configured for this step."
          },
          "completion_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Tokens",
            "description": "The number of tokens generated by the agent during this step."
          },
          "prompt_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Tokens",
            "description": "The number of tokens in the prompt during this step."
          },
          "total_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Tokens",
            "description": "The total number of tokens processed by the agent during this step."
          },
          "completion_tokens_details": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Tokens Details",
            "description": "Metadata for the agent."
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "Metadata tags.",
            "default": []
          },
          "tid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tid",
            "description": "The unique identifier of the transaction that processed this step."
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "type": "array",
            "title": "Messages",
            "description": "The messages generated during this step.",
            "default": []
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id"],
        "title": "Step"
      },
      "SystemMessage": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date"
          },
          "message_type": {
            "type": "string",
            "enum": ["system_message"],
            "const": "system_message",
            "title": "Message Type",
            "default": "system_message"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TextContent"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "text": "#/components/schemas/TextContent"
                    }
                  }
                },
                "type": "array"
              }
            ],
            "title": "Content"
          }
        },
        "type": "object",
        "required": ["id", "date", "content"],
        "title": "SystemMessage",
        "description": "A message generated by the system. Never streamed back on a response, only used for cursor pagination.\n\nAttributes:\n    content (Union[str, List[MessageContentUnion]]): The message content sent by the user (can be a string or an array of content parts)\n    id (str): The ID of the message\n    date (datetime): The date the message was created in ISO format"
      },
      "TerminalToolRule": {
        "properties": {
          "tool_name": {
            "type": "string",
            "title": "Tool Name",
            "description": "The name of the tool. Must exist in the database for the user's organization."
          },
          "type": {
            "type": "string",
            "enum": ["exit_loop"],
            "const": "exit_loop",
            "title": "Type",
            "default": "exit_loop"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["tool_name"],
        "title": "TerminalToolRule",
        "description": "Represents a terminal tool rule configuration where if this tool gets called, it must end the agent loop."
      },
      "TextContent": {
        "properties": {
          "type": {
            "type": "string",
            "enum": ["text"],
            "const": "text",
            "title": "Type",
            "description": "The type of the message.",
            "default": "text"
          },
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text content of the message."
          }
        },
        "type": "object",
        "required": ["text"],
        "title": "TextContent"
      },
      "Tool": {
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^tool-[a-fA-F0-9]{8}",
            "title": "Id",
            "description": "The human-friendly ID of the Tool",
            "examples": ["tool-123e4567-e89b-12d3-a456-426614174000"]
          },
          "tool_type": {
            "$ref": "#/components/schemas/ToolType",
            "description": "The type of the tool.",
            "default": "custom"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of the tool."
          },
          "source_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Type",
            "description": "The type of the source code."
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "The name of the function."
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "Metadata tags.",
            "default": []
          },
          "source_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Code",
            "description": "The source code of the function."
          },
          "json_schema": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Json Schema",
            "description": "The JSON schema of the function."
          },
          "return_char_limit": {
            "type": "integer",
            "title": "Return Char Limit",
            "description": "The maximum number of characters in the response.",
            "default": 6000
          },
          "created_by_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id",
            "description": "The id of the user that made this Tool."
          },
          "last_updated_by_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated By Id",
            "description": "The id of the user that made this Tool."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "Tool",
        "description": "Representation of a tool, which is a function that can be called by the agent.\n\nParameters:\n    id (str): The unique identifier of the tool.\n    name (str): The name of the function.\n    tags (List[str]): Metadata tags.\n    source_code (str): The source code of the function.\n    json_schema (Dict): The JSON schema of the function."
      },
      "ToolCall": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "arguments": {
            "type": "string",
            "title": "Arguments"
          },
          "tool_call_id": {
            "type": "string",
            "title": "Tool Call Id"
          }
        },
        "type": "object",
        "required": ["name", "arguments", "tool_call_id"],
        "title": "ToolCall"
      },
      "ToolCallDelta": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "arguments": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Arguments"
          },
          "tool_call_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Call Id"
          }
        },
        "type": "object",
        "required": ["name", "arguments", "tool_call_id"],
        "title": "ToolCallDelta"
      },
      "ToolCallMessage": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date"
          },
          "message_type": {
            "type": "string",
            "enum": ["tool_call_message"],
            "const": "tool_call_message",
            "title": "Message Type",
            "default": "tool_call_message"
          },
          "tool_call": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ToolCall"
              },
              {
                "$ref": "#/components/schemas/ToolCallDelta"
              }
            ],
            "title": "Tool Call"
          }
        },
        "type": "object",
        "required": ["id", "date", "tool_call"],
        "title": "ToolCallMessage",
        "description": "A message representing a request to call a tool (generated by the LLM to trigger tool execution).\n\nAttributes:\n    tool_call (Union[ToolCall, ToolCallDelta]): The tool call\n    id (str): The ID of the message\n    date (datetime): The date the message was created in ISO format"
      },
      "ToolCreate": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of the tool."
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "Metadata tags.",
            "default": []
          },
          "source_code": {
            "type": "string",
            "title": "Source Code",
            "description": "The source code of the function."
          },
          "source_type": {
            "type": "string",
            "title": "Source Type",
            "description": "The source type of the function.",
            "default": "python"
          },
          "json_schema": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Json Schema",
            "description": "The JSON schema of the function (auto-generated from source_code if not provided)"
          },
          "return_char_limit": {
            "type": "integer",
            "title": "Return Char Limit",
            "description": "The maximum number of characters in the response.",
            "default": 6000
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["source_code"],
        "title": "ToolCreate"
      },
      "ToolReturnMessage": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date"
          },
          "message_type": {
            "type": "string",
            "enum": ["tool_return_message"],
            "const": "tool_return_message",
            "title": "Message Type",
            "default": "tool_return_message"
          },
          "tool_return": {
            "type": "string",
            "title": "Tool Return"
          },
          "status": {
            "type": "string",
            "enum": ["success", "error"],
            "title": "Status"
          },
          "tool_call_id": {
            "type": "string",
            "title": "Tool Call Id"
          },
          "stdout": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stdout"
          },
          "stderr": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stderr"
          }
        },
        "type": "object",
        "required": ["id", "date", "tool_return", "status", "tool_call_id"],
        "title": "ToolReturnMessage",
        "description": "A message representing the return value of a tool call (generated by Letta executing the requested tool).\n\nAttributes:\n    tool_return (str): The return value of the tool\n    status (Literal[\"success\", \"error\"]): The status of the tool call\n    id (str): The ID of the message\n    date (datetime): The date the message was created in ISO format\n    tool_call_id (str): A unique identifier for the tool call that generated this message\n    stdout (Optional[List(str)]): Captured stdout (e.g. prints, logs) from the tool invocation\n    stderr (Optional[List(str)]): Captured stderr from the tool invocation"
      },
      "ToolRunFromSource": {
        "properties": {
          "source_code": {
            "type": "string",
            "title": "Source Code",
            "description": "The source code of the function."
          },
          "args": {
            "type": "object",
            "title": "Args",
            "description": "The arguments to pass to the tool."
          },
          "env_vars": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Env Vars",
            "description": "The environment variables to pass to the tool."
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "The name of the tool to run."
          },
          "source_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Type",
            "description": "The type of the source code."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["source_code", "args"],
        "title": "ToolRunFromSource"
      },
      "ToolType": {
        "type": "string",
        "enum": [
          "custom",
          "letta_core",
          "letta_memory_core",
          "letta_multi_agent_core",
          "external_composio",
          "external_langchain"
        ],
        "title": "ToolType"
      },
      "ToolUpdate": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of the tool."
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Metadata tags."
          },
          "source_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Code",
            "description": "The source code of the function."
          },
          "source_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Type",
            "description": "The type of the source code."
          },
          "json_schema": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Json Schema",
            "description": "The JSON schema of the function (auto-generated from source_code if not provided)"
          },
          "return_char_limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Return Char Limit",
            "description": "The maximum number of characters in the response."
          }
        },
        "type": "object",
        "title": "ToolUpdate"
      },
      "UpdateAgent": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "The name of the agent."
          },
          "tool_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Ids",
            "description": "The ids of the tools used by the agent."
          },
          "source_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Ids",
            "description": "The ids of the sources used by the agent."
          },
          "block_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block Ids",
            "description": "The ids of the blocks used by the agent."
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "The tags associated with the agent."
          },
          "system": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System",
            "description": "The system prompt used by the agent."
          },
          "tool_rules": {
            "anyOf": [
              {
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ChildToolRule"
                    },
                    {
                      "$ref": "#/components/schemas/InitToolRule"
                    },
                    {
                      "$ref": "#/components/schemas/TerminalToolRule"
                    },
                    {
                      "$ref": "#/components/schemas/ConditionalToolRule"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "conditional": "#/components/schemas/ConditionalToolRule",
                      "constrain_child_tools": "#/components/schemas/ChildToolRule",
                      "exit_loop": "#/components/schemas/TerminalToolRule",
                      "run_first": "#/components/schemas/InitToolRule"
                    }
                  }
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Rules",
            "description": "The tool rules governing the agent."
          },
          "llm_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LLMConfig"
              },
              {
                "type": "null"
              }
            ],
            "description": "The LLM configuration used by the agent."
          },
          "embedding_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EmbeddingConfig"
              },
              {
                "type": "null"
              }
            ],
            "description": "The embedding configuration used by the agent."
          },
          "message_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message Ids",
            "description": "The ids of the messages in the agent's in-context memory."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of the agent."
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "The metadata of the agent."
          },
          "tool_exec_environment_variables": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Exec Environment Variables",
            "description": "The environment variables for tool execution specific to this agent."
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id",
            "description": "The id of the project the agent belongs to."
          },
          "template_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Id",
            "description": "The id of the template the agent belongs to."
          },
          "base_template_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Template Id",
            "description": "The base template id of the agent."
          }
        },
        "type": "object",
        "title": "UpdateAgent"
      },
      "UsageStatistics": {
        "properties": {
          "completion_tokens": {
            "type": "integer",
            "title": "Completion Tokens",
            "default": 0
          },
          "prompt_tokens": {
            "type": "integer",
            "title": "Prompt Tokens",
            "default": 0
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens",
            "default": 0
          }
        },
        "type": "object",
        "title": "UsageStatistics"
      },
      "User": {
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^user-[a-fA-F0-9]{8}",
            "title": "Id",
            "description": "The human-friendly ID of the User",
            "examples": ["user-123e4567-e89b-12d3-a456-426614174000"]
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the user."
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "The creation date of the user."
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "The update date of the user."
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted",
            "description": "Whether this user is deleted or not.",
            "default": false
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["name"],
        "title": "User",
        "description": "Representation of a user.\n\nParameters:\n    id (str): The unique identifier of the user.\n    name (str): The name of the user.\n    created_at (datetime): The creation date of the user."
      },
      "UserCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the user."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["name", "organization_id"],
        "title": "UserCreate"
      },
      "UserMessage": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date"
          },
          "message_type": {
            "type": "string",
            "enum": ["user_message"],
            "const": "user_message",
            "title": "Message Type",
            "default": "user_message"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TextContent"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "text": "#/components/schemas/TextContent"
                    }
                  }
                },
                "type": "array"
              }
            ],
            "title": "Content"
          }
        },
        "type": "object",
        "required": ["id", "date", "content"],
        "title": "UserMessage",
        "description": "A message sent by the user. Never streamed back on a response, only used for cursor pagination.\n\nAttributes:\n    content (Union[str, List[MessageContentUnion]]): The message content sent by the user (can be a string or an array of content parts)\n    id (str): The ID of the message\n    date (datetime): The date the message was created in ISO format"
      },
      "UserUpdate": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The id of the user to update."
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "The new name of the user."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id"],
        "title": "UserUpdate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      },
      "openai__types__chat__chat_completion_message_tool_call__Function": {
        "properties": {
          "arguments": {
            "type": "string",
            "title": "Arguments"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": ["arguments", "name"],
        "title": "Function"
      },
      "openai__types__chat__chat_completion_message_tool_call_param__Function": {
        "properties": {
          "arguments": {
            "type": "string",
            "title": "Arguments"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": ["arguments", "name"],
        "title": "Function"
      },
      "openai__types__chat__chat_completion_named_tool_choice_param__Function": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "Function"
      },
      "openai__types__chat__completion_create_params__Function": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "parameters": {
            "type": "object",
            "title": "Parameters"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "Function"
      },
      "LettaMessageUnion": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/SystemMessage"
          },
          {
            "$ref": "#/components/schemas/UserMessage"
          },
          {
            "$ref": "#/components/schemas/ReasoningMessage"
          },
          {
            "$ref": "#/components/schemas/ToolCallMessage"
          },
          {
            "$ref": "#/components/schemas/ToolReturnMessage"
          },
          {
            "$ref": "#/components/schemas/AssistantMessage"
          }
        ],
        "discriminator": {
          "propertyName": "message_type",
          "mapping": {
            "system_message": "#/components/schemas/SystemMessage",
            "user_message": "#/components/schemas/UserMessage",
            "reasoning_message": "#/components/schemas/ReasoningMessage",
            "tool_call_message": "#/components/schemas/ToolCallMessage",
            "tool_return_message": "#/components/schemas/ToolReturnMessage",
            "assistant_message": "#/components/schemas/AssistantMessage"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
