"""empty message

Revision ID: e1e15ff9ab6e
Revises: fcd6c014e6a8
Create Date: 2024-06-26 20:23:47.395414

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e1e15ff9ab6e'
down_revision: Union[str, None] = 'fcd6c014e6a8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('job',
    sa.Column('status', sa.Enum('created', 'running', 'completed', 'failed', name='jobstatus'), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('metadata_', sa.JSON(), nullable=True),
    sa.Column('_user_id', sa.UUID(), nullable=False),
    sa.Column('_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('_created_by_id', sa.UUID(), nullable=True),
    sa.Column('_last_updated_by_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['_user_id'], ['user._id'], ),
    sa.PrimaryKeyConstraint('_id')
    )
    op.drop_table('agent_source_mapping')
    op.drop_table('humanmodel')
    op.drop_table('agents')
    op.drop_table('toolmodel')
    op.drop_table('presets')
    op.drop_table('users')
    op.drop_table('tokens')
    op.drop_table('personamodel')
    op.drop_table('jobmodel')
    op.drop_table('sources')
    op.drop_table('preset_source_mapping')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('preset_source_mapping',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('preset_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('source_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='preset_source_mapping_pkey')
    )
    op.create_table('sources',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('embedding_dim', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('embedding_model', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='sources_pkey')
    )
    op.create_table('jobmodel',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('completed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('metadata_', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='jobmodel_pkey')
    )
    op.create_table('personamodel',
    sa.Column('text', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='personamodel_pkey')
    )
    op.create_table('tokens',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('token', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='tokens_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('default_agent', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('policies_accepted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_table('presets',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('system', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('human', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('human_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('persona', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('persona_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('preset', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('functions_schema', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='presets_pkey')
    )
    op.create_table('toolmodel',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('tags', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('source_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('source_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('json_schema', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='toolmodel_pkey')
    )
    op.create_table('agents',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('persona', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('human', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('preset', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('llm_config', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('embedding_config', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('state', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='agents_pkey')
    )
    op.create_table('humanmodel',
    sa.Column('text', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='humanmodel_pkey')
    )
    op.create_table('agent_source_mapping',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('agent_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('source_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='agent_source_mapping_pkey')
    )
    op.drop_table('job')
    # ### end Alembic commands ###
