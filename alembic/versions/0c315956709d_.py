"""empty message

Revision ID: 0c315956709d
Revises: 9a505cc7eca9
Create Date: 2024-10-30 17:08:09.638235

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

import letta.metadata
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "0c315956709d"
down_revision: Union[str, None] = "9a505cc7eca9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("users")
    op.drop_table("tools")
    op.drop_table("organizations")
    op.create_table(
        "organization",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("_id", sa.String(), nullable=False),
        sa.Column("deleted", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), server_default=sa.text("FALSE"), nullable=False),
        sa.Column("_created_by_id", sa.String(), nullable=True),
        sa.Column("_last_updated_by_id", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("_id"),
    )
    op.create_table(
        "tool",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("tags", sa.JSON(), nullable=False),
        sa.Column("source_type", sa.String(), nullable=False),
        sa.Column("source_code", sa.String(), nullable=True),
        sa.Column("json_schema", sa.JSON(), nullable=False),
        sa.Column("module", sa.String(), nullable=True),
        sa.Column("_id", sa.String(), nullable=False),
        sa.Column("deleted", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), server_default=sa.text("FALSE"), nullable=False),
        sa.Column("_created_by_id", sa.String(), nullable=True),
        sa.Column("_last_updated_by_id", sa.String(), nullable=True),
        sa.Column("_organization_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["_organization_id"],
            ["organization._id"],
        ),
        sa.PrimaryKeyConstraint("_id"),
        sa.UniqueConstraint("name", "_organization_id", name="uix_name_organization"),
    )
    op.create_table(
        "user",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("_id", sa.String(), nullable=False),
        sa.Column("deleted", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), server_default=sa.text("FALSE"), nullable=False),
        sa.Column("_created_by_id", sa.String(), nullable=True),
        sa.Column("_last_updated_by_id", sa.String(), nullable=True),
        sa.Column("_organization_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["_organization_id"],
            ["organization._id"],
        ),
        sa.PrimaryKeyConstraint("_id"),
    )
    op.add_column("agents", sa.Column("tool_rules", letta.metadata.ToolRulesColumn(), nullable=True))
    op.alter_column("block", "name", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("block", "label", existing_type=sa.VARCHAR(), nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("block", "label", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("block", "name", existing_type=sa.VARCHAR(), nullable=False)
    op.drop_column("agents", "tool_rules")
    op.drop_table("organization")
    op.drop_table("tool")
    op.drop_table("user")
    op.create_table(
        "organizations",
        sa.Column("id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="organizations_pkey"),
    )
    op.create_table(
        "tools",
        sa.Column("id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("source_type", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("source_code", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("json_schema", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.Column("module", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("tags", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="tools_pkey"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("org_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column("policies_accepted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="users_pkey"),
    )
    # ### end Alembic commands ###
