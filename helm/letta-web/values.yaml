# Default values for letta-web.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 6

image:
  repository: us-central1-docker.pkg.dev/memgpt-428419/letta/web
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer
  port: 80
  loadBalancerIp: 34.45.207.17

ingress:
  enabled: false
  className: ""
  annotations:
    kubernetes.io/ingress.global-static-ip-name: "letta-web"
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 1.5
    memory: 2Gi
  requests:
    cpu: 1
    memory: 1Gi

livenessProbe:
  httpGet:
    path: /login
    port: 8080
readinessProbe:
  httpGet:
    path: /login
    port: 8080

autoscaling:
  enabled: true
  minReplicas: 6
  maxReplicas: 25
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

env:
  DATABASE_URL: ""
  GOOGLE_CLIENT_ID: ""
  GOOGLE_CLIENT_SECRET: ""
  GOOGLE_REDIRECT_URI: ""
  LETTA_AGENTS_ENDPOINT: ""
  REDIS_HOST: ""
  E2B_SANDBOX_TEMPLATE_ID: ""
  E2B_API_KEY: ""
  HUBSPOT_API_KEY: ""
  RESEND_API_KEY: ""
  COMPOSIO_API_KEY: ""

rollingUpdate:
  maxSurge: 25%
  maxUnavailable: 25%
