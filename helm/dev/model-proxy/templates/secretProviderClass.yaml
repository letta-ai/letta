# secretProviderClass
{{- if .Values.secretsProvider.secrets }}
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: {{ include "model-proxy.k8sEnvServicePrefix" $ }}secrets
spec:
  provider: gke
  secretObjects:
{{- range .Values.secretsProvider.secrets }}
  - secretName: {{ include "model-proxy.k8sEnvServicePrefix" $ }}{{ . | replace "_" "-" | lower }}
    data:
    - key: {{ include "model-proxy.k8sEnvServicePrefix" $ }}{{ . | replace "_" "-" | lower }}
      objectName: {{ include "model-proxy.k8sEnvServicePrefix" $ }}{{ . | replace "_" "-" | lower }}
    type: Opaque
{{- end }}
  parameters:
    secrets: |
{{- range .Values.secretsProvider.secrets }}
      {{/* this is the one place we must not use the k8s prefix */}}
      - resourceName: projects/{{ $.Values.project_id }}/secrets/{{ include "model-proxy.envServicePrefix" $ }}{{ . }}/versions/latest
        path: {{ include "model-proxy.k8sEnvServicePrefix" $ }}{{ . | replace "_" "-" | lower }}
{{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: secretprovidersyncing-{{ include "model-proxy.k8sEnvServicePrefix" $ }}-role

rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: secretprovidersyncing-{{ include "model-proxy.k8sEnvServicePrefix" $ }}-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: secretprovidersyncing-{{ include "model-proxy.k8sEnvServicePrefix" $ }}-role
subjects:
- kind: ServiceAccount
  name: secrets-store-csi-driver-gke
  namespace: kube-system
{{- end }}
