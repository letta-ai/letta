# Default values for lettuce-py.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

project_id: &project_id memgpt-428419
lettaEnv: &lettaEnv dev

temporal:
  namespace: &temporalNamespace "lettuce-py-staging.tmhou"

replicaCount: 5

image:
  repository: us-central1-docker.pkg.dev/memgpt-428419/letta-dev-us-central1/lettuce-py
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations:
    iam.gke.io/gcp-service-account: "lettuce-py-dev-sa@memgpt-428419.iam.gserviceaccount.com"
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "lettuce-py"

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Environment variables for the worker
env:
  LETTA_AGENTS_ENDPOINT: "http://memgpt-server:8083"
  REDIS_HOST: "10.219.146.68"
  REDIS_PORT: "6379"
  PORT: "8080"
  LETTA_TEMPORAL_NAMESPACE: *temporalNamespace
  LETTA_TEMPORAL_ENDPOINT: "lettuce-py-staging.tmhou.tmprl.cloud:7233"
  LETTA_TEMPORAL_TASK_QUEUE: "agent_loop_async_task_queue"
  LETTA_LOAD_DEFAULT_EXTERNAL_TOOLS: "true"
  LETTA_DISABLE_SQLALCHEMY_POOLING: "false"
  LETTA_PG_POOL_SIZE: "25"

secretsProvider:
  secrets:
    - LETTA_PG_URI
    - LETTA_TEMPORAL_API_KEY
    - LETTA_TEMPORAL_PRIVATE_KEY
    - LETTA_TEMPORAL_CLIENT_CERTIFICATE
    - OPENAI_API_KEY
    - ANTHROPIC_API_KEY
    - E2B_API_KEY

resources:
  limits:
    cpu: "1"
    memory: "2048Mi"
  requests:
    cpu: "0.5"
    memory: "1024Mi"

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
