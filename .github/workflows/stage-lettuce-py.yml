name:  🍃🚀 Stage Lettuce-py

on:
  workflow_dispatch:

env:
  PROJECT_ID: memgpt-428419
  REGION: us-central1
  REGISTRY_NAME: letta-dev-us-central1

jobs:
  changed-files:
    runs-on: ubuntu-latest
    name: changed-files
    outputs:
      any_changed: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            apps/lettuce-py/**

  build-and-deploy:
    needs: changed-files
    runs-on: ubuntu-latest
    timeout-minutes: 60
    if: needs.changed-files.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Create GitHub deployment
        id: deployment
        uses: chrnorm/deployment-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: production

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Set active project
        run: |
          gcloud config set project ${{ env.PROJECT_ID }}
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          kubectl version --client

      - name: Install Just
        run: sudo apt install -y just

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Install gke-gcloud-auth-plugin
        run: |
          sudo apt-get update
          sudo apt-get install apt-transport-https ca-certificates gnupg
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          sudo apt-get update
          sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin

      - name: Configure Docker
        run: just configure-docker

      - name: Setup GCP Service Account Key
        run: echo '${{ secrets.GCP_SA_KEY }}' > ${{ github.workspace }}/gcp-key.json

      - name: Configure kubectl
        env:
          USE_GKE_GCLOUD_AUTH_PLUGIN: True
        run: just configure-kubectl letta-dev-us-central1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build
        run: just build-lettuce-py
        env:
          TAG: ${{ github.event.inputs.git_hash || github.sha }}

      - name: Update deployment status to in_progress
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: in_progress

      - name: Inject env vars into environment
        working-directory: apps/core
        run: |
          # Get secrets and mask them before adding to environment
          while IFS= read -r line || [[ -n "$line" ]]; do
            # Check if line is not empty
            if [[ -n "$line" ]]; then
              # Extract the value after the equals sign
              value=$(echo "$line" | cut -d= -f2-)
              # Mask the value so it doesn't appear in logs
              echo "::add-mask::$value"
              # Add to GitHub environment
              echo "$line" >> $GITHUB_ENV
            fi
          done < <(uvx --with google-cloud-secret-manager python3 ../../packer/base/files/letta_secrets_helper.py --env prod --service memgpt-server)

      - name: Deploy
        id: deploy
        run: just deploy-lettuce-py
        env:
          TAG: ${{ github.event.inputs.git_hash || github.sha }}
          DEPLOY_MESSAGE: ${{ github.event.inputs.deploy_message || github.event.head_commit.message }}
          DATABASE_URL: ${{ env.DATABASE_URL }}
          TEMPORAL_API_KEY: ${{ env.TEMPORAL_API_KEY }}


      - name: Update deployment status to success
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: success

      - name: Update deployment status to failure
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: failure

      - name: Fire alert
        if: failure()
        run: just alert "${{ github.workflow }} failed!" "${{ github.actor }}"
