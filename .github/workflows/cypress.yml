name: 🕸️ Cypress Tests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
        - main
jobs:
  changed-files:
    runs-on: ubuntu-latest
    name: changed-files
    outputs:
      all_changed_files: ${{ steps.changed-files.outputs.all_changed_files }}
      any_changed: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            apps/letta/**
            libs/component-library/**
            package.json
            package-lock.json
            tsconfig.json
  cypress-run:
    needs: [changed-files]
    if: ${{ needs.changed-files.outputs.any_changed == 'true' }}
    runs-on: ubuntu-latest
    environment: Deployment
    # Runs tests in parallel with matrix strategy https://docs.cypress.io/guides/guides/parallelization
    # https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs
    # Also see warning here https://github.com/cypress-io/github-action#parallel
    strategy:
      fail-fast: false # https://github.com/cypress-io/github-action/issues/48
      matrix:
        containers: [ 1 ] # Uses 2 parallel instances
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Checkout letta agents
        uses: actions/checkout@v4
        with:
          repository: letta-ai/letta-agents
          token: ${{ secrets.PULLER_TOKEN }}
          path: letta-agents
      - name: Turn on Letta agents
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LETTA_PG_DB: postgres
          LETTA_PG_USER: postgres
          LETTA_PG_PASSWORD: postgres
          LETTA_PG_HOST: localhost
          LETTA_PG_PORT: 5432
          LETTA_LLM_ENDPOINT: https://api.openai.com/v1
          LETTA_LLM_ENDPOINT_TYPE: openai
          LETTA_LLM_MODEL: gpt-4
          LETTA_LLM_CONTEXT_WINDOW: 8192
          LETTA_EMBEDDING_ENDPOINT: https://api.openai.com/v1
          LETTA_EMBEDDING_ENDPOINT_TYPE: openai
          LETTA_EMBEDDING_DIM: 1536
          LETTA_EMBEDDING_MODEL: text-embedding-ada-002
          LETTA_DEBUG: True
        working-directory: letta-agents
        run: |
          docker build -t letta-agents .
          docker run -d -p 8083:8083 --name letta-agents letta-agents

      - name: Cypress run
        # Uses the official Cypress GitHub action https://github.com/cypress-io/github-action
        uses: cypress-io/github-action@v6
        with:
          build: npm run build:e2e
          start: npm run start:e2e
          project: apps/letta
          wait-on: 'http://localhost:3000' # Waits for above
          # Records to Cypress Cloud
          # https://docs.cypress.io/guides/cloud/projects#Set-up-a-project-to-record
          record: true
          parallel: true # Runs test in parallel using settings above
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          CYPRESS_GOOGLE_CLIENT_ID: ${{ secrets.CYPRESS_GOOGLE_CLIENT_ID }}
          CYPRESS_GOOGLE_CLIENT_SECRET: ${{ secrets.CYPRESS_GOOGLE_CLIENT_SECRET }}
          CYPRESS_GOOGLE_REFRESH_TOKEN: ${{ secrets.CYPRESS_GOOGLE_REFRESH_TOKEN }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          LETTA_AGENTS_ENDPOINT: http://localhost:8083
          NEXT_PUBLIC_CURRENT_HOST: http://localhost:3000
          IS_CYPRESS_RUN: yes
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          TAG: ${{ github.sha }}
  cypress-result:
    needs: [cypress-run]
    runs-on: ubuntu-latest
    steps:
      - name: "Echo Cypress Results"
        run: echo "Done running Cypress tests"
