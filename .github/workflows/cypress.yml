name: 🕸️ Cypress Tests

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: read
  contents: read

on:
  push:
    branches:
      - main
  pull_request:
    branches:
        - main
jobs:
  setup-google-auth:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    outputs:
      access_token: ${{ steps.auth.outputs.access_token }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: 'google-github-actions/auth@v2'
        with:
          project_id: 'memgpt-428419'
          service_account: 'github-actions-service-account@memgpt-428419.iam.gserviceaccount.com'
          workload_identity_provider: 'projects/231889654562/locations/global/workloadIdentityPools/letta-web-dev-pool/providers/github-actions-provider'
          token_format: 'access_token'
#  changed-files:
#    runs-on: ubuntu-latest
#    name: changed-files
#    outputs:
#      all_changed_files: ${{ steps.changed-files.outputs.all_changed_files }}
#      any_changed: ${{ steps.changed-files.outputs.any_changed }}
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#      - name: Get changed files
#        id: changed-files
#        uses: tj-actions/changed-files@v44
#        with:
#          files: |
#            apps/letta/**
#            libs/component-library/**
#            package.json
#            package-lock.json
#            tsconfig.json
#  prepare:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Wait for lint to succeed
#        uses: lewagon/wait-on-check-action@v0.2
#        with:
#          ref: ${{ github.event.pull_request.head.sha || github.sha }}
#          check-name: 💨 Lint
#          repo-token: ${{ secrets.PULLER_TOKEN }}
#          wait-interval: 20
#
#      - name: Wait for unit-tests to succeed
#        uses: lewagon/wait-on-check-action@v0.2
#        with:
#          ref: ${{ github.event.pull_request.head.sha || github.sha }}
#          check-name: 🧪 Unit Tests
#          repo-token: ${{ secrets.PULLER_TOKEN }}
#          wait-interval: 20
  cypress-run:
    needs: [setup-google-auth]
    #if: ${{ needs.changed-files.outputs.any_changed == 'true' }}
    runs-on: ubuntu-latest
    environment: Deployment
    # Runs tests in parallel with matrix strategy https://docs.cypress.io/guides/guides/parallelization
    # https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs
    # Also see warning here https://github.com/cypress-io/github-action#parallel
    strategy:
      fail-fast: false
      matrix:
        containers: [ 1, 2]
    services:
      letta-agents:
        image: us-central1-docker.pkg.dev/memgpt-428419/letta/memgpt-server:latest
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LETTA_PG_DB: postgres
          LETTA_PG_USER: postgres
          LETTA_PG_PASSWORD: postgres
          LETTA_PG_HOST: localhost
          LETTA_PG_PORT: 5432
          LETTA_LLM_ENDPOINT: https://api.openai.com/v1
          LETTA_LLM_ENDPOINT_TYPE: openai
          LETTA_LLM_MODEL: gpt-4
          LETTA_LLM_CONTEXT_WINDOW: 8192
          LETTA_EMBEDDING_ENDPOINT: https://api.openai.com/v1
          LETTA_EMBEDDING_ENDPOINT_TYPE: openai
          LETTA_EMBEDDING_DIM: 1536
          LETTA_EMBEDDING_MODEL: text-embedding-ada-002
          LETTA_DEBUG: True
        credentials:
          username: 'oauth2accesstoken'
          password: ${{ needs.setup-google-auth.auth.outputs.access_token }}
        ports:
          - 8083:8083
        options:
          --health-cmd "curl -f http://localhost:8083/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Restore node_modules cache if exist
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-${{ env.node-version }}
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Restore NPM cache if exist
        id: cache-npm
        uses: actions/cache@v2
        env:
          cache-name: cache-npm-${{ env.node-version }}
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ env.cache-name }}

      - name: Restore Cypress cache if exist
        uses: actions/cache@v2
        env:
          cache-name: cache-cypress-${{ env.node-version }}
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-${{ env.cache-name }}
      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Cypress run
        # Uses the official Cypress GitHub action https://github.com/cypress-io/github-action
        uses: cypress-io/github-action@v6
        with:
          build: npm run build:e2e
          start: npm run start:e2e
          install: false
          project: apps/letta
          wait-on: 'http://localhost:3000' # Waits for above
          # Records to Cypress Cloud
          # https://docs.cypress.io/guides/cloud/projects#Set-up-a-project-to-record
          record: true
          parallel: true # Runs test in parallel using settings above
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          CYPRESS_GOOGLE_CLIENT_ID: ${{ secrets.CYPRESS_GOOGLE_CLIENT_ID }}
          CYPRESS_GOOGLE_CLIENT_SECRET: ${{ secrets.CYPRESS_GOOGLE_CLIENT_SECRET }}
          CYPRESS_GOOGLE_REFRESH_TOKEN: ${{ secrets.CYPRESS_GOOGLE_REFRESH_TOKEN }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          LETTA_AGENTS_ENDPOINT: http://localhost:8083
          NEXT_PUBLIC_CURRENT_HOST: http://localhost:3000
          IS_CYPRESS_RUN: yes
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          TAG: ${{ github.sha }}
