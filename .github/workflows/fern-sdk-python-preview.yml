name: ðŸŒ¿ Preview Python SDK

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    paths:
      - 'apps/fern/openapi.json'
      - 'apps/fern/openapi-overrides.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  changed-files:
    runs-on: self-hosted
    name: changed-files
    outputs:
      all_changed_files: ${{ steps.changed-files.outputs.all_changed_files }}
      any_changed: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            apps/fern/openapi.json
            apps/fern/openapi-overrides.yml

  preview-python-sdk:
    if: ${{ needs.changed-files.outputs.any_changed == 'true' }}
    needs: [changed-files]
    runs-on: self-hosted
    services:
      postgres:
        image: pgvector/pgvector:pg17
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Inject env vars into environment
        working-directory: apps/core
        run: |
          while IFS= read -r line || [[ -n "$line" ]]; do
            if [[ -n "$line" ]]; then
              value=$(echo "$line" | cut -d= -f2-)
              echo "::add-mask::$value"
              echo "$line" >> $GITHUB_ENV
            fi
          done < <(letta_secrets_helper --env dev --service ci)

      - name: Install dependencies
        shell: bash
        working-directory: apps/core
        run: poetry install --no-interaction --no-root ${{ inputs.install-args || '-E dev -E postgres -E external-tools -E tests -E cloud-tool-sandbox' }}

      - name: Migrate database
        working-directory: apps/core
        env:
          LETTA_PG_PORT: 5432
          LETTA_PG_USER: postgres
          LETTA_PG_PASSWORD: postgres
          LETTA_PG_DB: postgres
          LETTA_PG_HOST: localhost
        run: |
          psql -h localhost -U postgres -d postgres -c 'CREATE EXTENSION vector'
          poetry run alembic upgrade head

      - name: Run letta server
        working-directory: apps/core
        env:
          LETTA_PG_DB: postgres
          LETTA_PG_USER: postgres
          LETTA_PG_PASSWORD: postgres
          LETTA_PG_HOST: localhost
          LETTA_PG_PORT: 5432
          OPENAI_API_KEY: ${{ env.OPENAI_API_KEY }}
          E2B_SANDBOX_TEMPLATE_ID: ${{ env.E2B_SANDBOX_TEMPLATE_ID }}
        run: |
          # Run server in background
          poetry run letta server &
          # Wait for server to be ready
          timeout 60 bash -c 'until curl -s http://localhost:8283/health; do sleep 1; done'

      - name: Generate Python SDK Preview
        working-directory: apps
        env:
          FERN_TOKEN: ${{ secrets.FERN_TOKEN }}
        run: |
          fern generate --group python-sdk --preview
          cd fern/.preview/fern-python-sdk
          poetry install
          poetry run mypy .
          poetry run pytest -rP tests/custom/test_client.py --env localhost
