name: 🐍🚀 Deploy Core Voice

on:
  workflow_dispatch:
    inputs:
      git_hash:
        description: 'Git hash to deploy'
        required: false
        type: string
      branch:
        description: 'Branch to deploy'
        required: false
        type: string
        default: 'main'
      deploy_message:
        description: 'Deployment message'
        required: false
        type: string
        default: ''

env:
  PROJECT_ID: memgpt-428419
  REGION: us-central1
  REGISTRY_NAME: letta

jobs:
  deploy-core-voice:
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.git_hash || github.event.inputs.branch || github.sha }}
          submodules: recursive

      - name: Set up python 3.12
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      # second call to letta_secrets_helper.py will overwrite variables from first call (i.e. E2B_SANDBOX_TEMPLATE_ID)
      - name: Inject env vars into environment
        working-directory: apps/core
        run: |
          # Get 'prod' secrets and mask them before adding to environment
          while IFS= read -r line || [[ -n "$line" ]]; do
            if [[ -n "$line" ]]; then
              value=$(echo "$line" | cut -d= -f2-)
              echo "::add-mask::$value"
              echo "$line" >> $GITHUB_ENV
            fi
          done < <(uvx --with google-cloud-secret-manager python3 ../../packer/base/files/letta_secrets_helper.py -e prod -s memgpt-server-voice)

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          # Add Google Cloud SDK repository and install GKE authentication plugin
          sudo apt-get install apt-transport-https ca-certificates gnupg
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          sudo apt-get update
          sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin

      - name: Install Just
        run: sudo apt install -y just

      - name: Install Helm
        run: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Configure kubectl
        env:
          USE_GKE_GCLOUD_AUTH_PLUGIN: True
        run: just configure-kubectl letta

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Build and Deploy
        env:
          TAG: ${{ github.event.inputs.git_hash || github.sha }}
          DEPLOY_MESSAGE: ${{ github.event.inputs.deploy_message || github.event.head_commit.message }}

        run: just build-voice deploy-voice "${DEPLOY_MESSAGE}"
