name: üîÑ Validate Workflow Sync

on:
  pull_request:
    branches: [main]
    paths:
      - '.github/workflows/**'
      - 'apps/core/.github/workflows/**'
  push:
    branches: [main]
    paths:
      - '.github/workflows/**'
      - 'apps/core/.github/workflows/**'
  workflow_dispatch:

jobs:
  validate-sync:
    name: Validate workflow files are in sync
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Find matching workflows
        id: find-workflows
        run: |
          echo "üîç Finding workflows that exist in both directories..."

          # Define workflows to ignore (intentionally different between cloud and OSS)
          cat << 'EOF' > ignored_workflows.txt
          alembic-validation.yml
          model-sweep.yaml
          EOF

          echo "Ignoring these workflows (intentionally different):"
          cat ignored_workflows.txt
          echo

          # Find all workflow files that exist in both directories
          find .github/workflows -name "*.yml" -o -name "*.yaml" | while read cloud_file; do
            filename=$(basename "$cloud_file")
            oss_file="apps/core/.github/workflows/$filename"

            # Skip ignored files
            if grep -Fxq "$filename" ignored_workflows.txt; then
              continue
            fi

            if [[ -f "$oss_file" ]]; then
              echo "$filename"
            fi
          done | sort > matching_workflows.txt

          echo "Found $(wc -l < matching_workflows.txt) matching workflow files to validate:"
          cat matching_workflows.txt

      - name: Check workflow sync
        run: |
          echo "üîç Checking workflow synchronization..."

          SYNC_FAILED=false
          TOTAL_FILES=0
          MATCHING_FILES=0

          while IFS= read -r workflow; do
            # Skip empty lines
            [[ -z "$workflow" ]] && continue

            CLOUD_FILE=".github/workflows/$workflow"
            OSS_FILE="apps/core/.github/workflows/$workflow"

            echo "Checking: $workflow"
            TOTAL_FILES=$((TOTAL_FILES + 1))

            # Both files should exist (we found them in the previous step)
            if [[ ! -f "$CLOUD_FILE" || ! -f "$OSS_FILE" ]]; then
              echo "‚ùå Unexpected missing file: $workflow"
              SYNC_FAILED=true
              continue
            fi

            # Compare files
            if ! diff -q "$CLOUD_FILE" "$OSS_FILE" > /dev/null; then
              echo "‚ùå Files differ: $workflow"
              echo "Cloud file: $CLOUD_FILE"
              echo "OSS file: $OSS_FILE"
              echo
              echo "Differences:"
              diff "$CLOUD_FILE" "$OSS_FILE" || true
              echo
              SYNC_FAILED=true
            else
              echo "‚úÖ Files match: $workflow"
              MATCHING_FILES=$((MATCHING_FILES + 1))
            fi
          done < matching_workflows.txt

          echo
          echo "üìä Summary: $MATCHING_FILES/$TOTAL_FILES workflows are in sync"

          if [[ "$SYNC_FAILED" == "true" ]]; then
            echo
            echo "üí• SYNC VALIDATION FAILED!"
            echo "Some workflow files are out of sync between .github/workflows/ and apps/core/.github/workflows/"
            echo
            echo "To fix this:"
            echo "1. Decide which version is correct"
            echo "2. Copy the correct version to both locations"
            echo "3. Ensure both files are identical"
            echo
            echo "These workflows must be kept in sync for the OSS migration to work correctly."
            exit 1
          else
            echo
            echo "‚úÖ All workflow files are in sync!"
          fi

      - name: Generate sync report
        if: always()
        run: |
          echo "## üîÑ Workflow Sync Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Count files
          TOTAL_FILES=$(wc -l < matching_workflows.txt)
          MATCHING_FILES=0

          echo "### Validated Workflows ($TOTAL_FILES total):" >> $GITHUB_STEP_SUMMARY
          while IFS= read -r workflow; do
            [[ -z "$workflow" ]] && continue

            CLOUD_FILE=".github/workflows/$workflow"
            OSS_FILE="apps/core/.github/workflows/$workflow"

            if [[ -f "$CLOUD_FILE" && -f "$OSS_FILE" ]]; then
              if diff -q "$CLOUD_FILE" "$OSS_FILE" > /dev/null; then
                echo "- ‚úÖ **$workflow** - Files match" >> $GITHUB_STEP_SUMMARY
                MATCHING_FILES=$((MATCHING_FILES + 1))
              else
                echo "- ‚ùå **$workflow** - Files differ" >> $GITHUB_STEP_SUMMARY
              fi
            else
              echo "- ‚ùå **$workflow** - Missing file(s)" >> $GITHUB_STEP_SUMMARY
            fi
          done < matching_workflows.txt

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Result:** $MATCHING_FILES/$TOTAL_FILES workflows in sync" >> $GITHUB_STEP_SUMMARY

          # Show ignored workflows
          if [[ -f ignored_workflows.txt && -s ignored_workflows.txt ]]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Ignored Workflows (intentionally different):" >> $GITHUB_STEP_SUMMARY
            while IFS= read -r ignored_workflow; do
              [[ -z "$ignored_workflow" ]] && continue
              echo "- üö´ **$ignored_workflow** - Excluded from sync validation" >> $GITHUB_STEP_SUMMARY
            done < ignored_workflows.txt
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "_This check automatically finds workflow files that exist in both .github/workflows and apps/core/.github/workflows, then ensures they are identical for seamless OSS migration._" >> $GITHUB_STEP_SUMMARY
